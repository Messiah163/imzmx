{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/embed.min.js","path":"js/embed.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/embed.js","path":"js/embed.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"b74e38e322d86183d8865cd8dce465058e879e9c","modified":1493101052000},{"_id":"source/CNAME","hash":"d9fed198cfd2aef7d93e5a0d7dad30913066266e","modified":1493101077000},{"_id":"themes/indigo/_config.yml","hash":"2b27234a01bc62fe5c9ee208a77b4172b3ca3b90","modified":1493351471000},{"_id":"themes/indigo/package.json","hash":"762a2e2fe4d861807b37d8f8992aa4cfb08abd2a","modified":1492556480000},{"_id":"themes/indigo/.editorconfig","hash":"9b0445427777519defe360ea38c61729d847b3d3","modified":1493018116000},{"_id":"themes/indigo/.DS_Store","hash":"40ac4fef88ccd1e1de0e9e4be84acefe3ab8ea9f","modified":1493171313000},{"_id":"themes/indigo/README.md","hash":"15ab71102c10c65c4cf594693abdf644b1e4d92c","modified":1492556480000},{"_id":"source/404/index.md","hash":"37a5ac069f21a5a3f843ed57eac9b032998c5295","modified":1493101702000},{"_id":"source/_posts/centos-s.md","hash":"712b287228235cead4efd1d0f204eab8cd145488","modified":1493104869000},{"_id":"source/_posts/hello-world.md","hash":"cde1e6fa994941476fa67352ef4236040e52dd56","modified":1493373098000},{"_id":"source/about/index.md","hash":"a4db67cc0ddeab72da2c466ee35d722778e4c278","modified":1493265226000},{"_id":"source/tags/index.md","hash":"f12065e97bd54f0726ba43a459b228afaba16945","modified":1493088999000},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"15c0e59b63b970c2fa0561fbba60d2b29d0c2a1b","modified":1493265326000},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"6a9e820be66eb12ae746f2527e0dc1adf927c685","modified":1492556480000},{"_id":"themes/indigo/languages/en.yml","hash":"1957d2bfc3a4cef299f4f169b431e9b1128ba162","modified":1492556480000},{"_id":"source/categories/index.md","hash":"ccd9ee79af3e5c749d636d2e115bd1c89a610c73","modified":1493089059000},{"_id":"themes/indigo/layout/archive.ejs","hash":"d039719e21f6a6fa2925b00aaa623a180a78c818","modified":1493018116000},{"_id":"themes/indigo/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1493018116000},{"_id":"themes/indigo/layout/categories.ejs","hash":"41783d2069d5080566a99e6312aa2113105f8b41","modified":1493018116000},{"_id":"themes/indigo/layout/index.ejs","hash":"39477807b98b2d2df78f3b82498a11e90be8222c","modified":1493018116000},{"_id":"themes/indigo/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1493018116000},{"_id":"themes/indigo/layout/page.ejs","hash":"afb98face24d39a21ebbbde6592a9afc98572aa4","modified":1493018116000},{"_id":"themes/indigo/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1493018116000},{"_id":"themes/indigo/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1492556480000},{"_id":"themes/indigo/layout/layout.ejs","hash":"d52f43fa9572d70cae834e4887c8897b43744805","modified":1493018116000},{"_id":"themes/indigo/layout/tags.ejs","hash":"20466446c41409d14a3d42ccaec24a65a045efef","modified":1493018116000},{"_id":"themes/indigo/source/.DS_Store","hash":"fbe65f1d5797438bf9f17f57e985acdb70e6aee6","modified":1493114247000},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"9ac30b9439fab69973cf4722dbf2945a18fd3804","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"051b81d5b51f238f2f493eb5ddd2441ada7b6b6c","modified":1493112397000},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"55cd81ef9183426d6d99fd91550fce0a9cc92aa0","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"e01d1987f1016c521a19355d38d35dc78d20f3da","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"6156bf20791e46fc1c5872113276c1c1f5c13773","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"58745bd3b21926014a98e18a35c9721e97fcb0c1","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"d39afaad6b0dd2a3ae27e6db3e9a6cd6014622fa","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"27f37ef30ea3651940be6f3f16f33ec492b252e5","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"9b4dd97e7f558bb619d805ff6eb89abd8bc945ea","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"c2091c621b5480ef1e69d72027028cec8e929892","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"19eff4876d31080a427644f7a43fe172d0c008c6","modified":1493018116000},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1493018117000},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"a0f2a7b537bfe67f67956b8aefa1b1e267408995","modified":1493112397000},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1493018117000},{"_id":"themes/indigo/source/img/favicon.ico","hash":"67e1d736b3a3b4d8bcb818028790edfc4c4bd301","modified":1491977559000},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1493018117000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1493018117000},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"f4d6e66bad3e36c32dbec2dff9c9f56526885c0a","modified":1493112397000},{"_id":"themes/indigo/source/js/main.js","hash":"5c51b53d59d5131bfa4e9b6a0af3557ee6dc6a85","modified":1492556480000},{"_id":"themes/indigo/source/js/main.min.js","hash":"7355f5a169c02ff32af75b95237ef34e3756e9c8","modified":1492556480000},{"_id":"themes/indigo/source/js/search.js","hash":"c3f80dee3bab6bd4895b55b849085c8af7d1e647","modified":1492556480000},{"_id":"themes/indigo/source/js/search.min.js","hash":"c0c3d048af0d6b840f6f1dfda08911c7bfdb5dc1","modified":1492556480000},{"_id":"themes/indigo/source/css/style.less","hash":"6e8609fa857be01f0206209a746c9872389c42c3","modified":1492556480000},{"_id":"themes/indigo/source/js/embed.min.js","hash":"bf39139ceccbd38a925bc1c434f6229df27b0e7c","modified":1492556480000},{"_id":"themes/indigo/layout/_partial/plugins/duoshuo-count.ejs","hash":"de23dfaaaed783f6ade86084fb7bcee531dce4d0","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"e44d526029f122e9c2c74f3a647c35002c818cbe","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/duoshuo-js.ejs","hash":"fe1117d6e3c8a52be00ecc758df2df4be91b13a5","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"23c101d45911eb0846533aaa2d409c43aa5e899a","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/duoshuo.ejs","hash":"edc98c8015ab1deff32507d5f563f5cab0bd7f68","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"2decb77bf3c1a064ea6ce1d4e78892c434d9c884","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"8fbd0910828f1ab6eba728bdecc9811d623baae2","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/gentie.ejs","hash":"ca014b25ab59cefe222ce13783cab5034d2fde56","modified":1493350525000},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"7d084a5075051503173ba554eb6e6d6485298706","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"198d5b8e26ec7da4473d43486fb68e327297d2af","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"968b27ca952d01b066cfe49fb670faf177d6b67e","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"11e7d504f7c7a3c4c052da13cfa8ea4862c9383e","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"41c242fe3159dc68cec8dd00ab6d2663f5a51179","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"ce764334c94e198fde3d222eadedc8813f026fca","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"8df0d7bf6f8e106cdbdac2dd10a97367aa0695f8","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"b6123e895c16ace651f1832281ff655776d4068c","modified":1493018116000},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"5caa71745aa340ce57938a930f3b898ee7518d74","modified":1493018116000},{"_id":"themes/indigo/source/css/_duoshuo/custom.less","hash":"b6b4caf08c3be67db5a14fc54241b61a815a5ffa","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/common.less","hash":"49fdcf4bde1a9d2aa4db4d8d117f46b432cee8d0","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/dialog.less","hash":"61596d022ea489ec6a0dda9fe93c5c6479135da9","modified":1492556480000},{"_id":"themes/indigo/source/js/embed.js","hash":"3ac650967aa0f74ec4d7ef5d8d168f7f199e31af","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/embed.less","hash":"a09aeb68646e6309d737dddea237a2d160608bbf","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/mixins.less","hash":"caf782f681fc97ecdab34bc34e16e3353bcd1eb6","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/login.less","hash":"6a7962f817199802f91d32d4e9bb87098683d84c","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/notify.less","hash":"de48d76de6b99d7aa3f176cb1345b5bd1a6e3ec0","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/global.less","hash":"933874033bc487937ea34f6b05f1f94bd52ad758","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/recent-visitors.less","hash":"9494e2183ce7a7a3f5742e3ba42b3514312a5006","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/recent-comments.less","hash":"1e2a57b7dc9ca3ef46d9966b49d0a8e614920c0a","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/share.less","hash":"4218e03b97d12b006dc01c78f02f76a1e0daafb7","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/thread.less","hash":"2fb5b1105fd1863c2fc25fa5c9973748691b93e8","modified":1492556480000},{"_id":"themes/indigo/source/css/_duoshuo/variables.less","hash":"2cf171e7465da213a28e3c271303916ceef9c8a2","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"d87fafede5585020b6b9c1f76504365c3bb77023","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"7d2a6886265386c640e94ffca3f042675f701a35","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"90f0948a9182c14b1dac1e9dbed3c883543266f9","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"58492b7cdb45fe09b026b2f34e8ae69c2ddb8228","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"c075e2ee959ada91091281da98cf020c83930124","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"f9d06a1e24fb4857fd18d7a0bfbb3a0ab2d1c742","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"156b5d2c2b83d2fd768c83119bd1dc23756f657d","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"9b961eb1d70e7658f42cf2ca895fa5e35a6b6541","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"e92ccb53e6ac73a51498c6a9672db9d0d2bc7f1a","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"1d6641ae7568a0153d24beba9fd9704d2b155f6c","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"27d80bcc96a53dd1e7eaa9a7d746e4b212357302","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"88635cb5673f4cd1d10e4af481e2208be4886565","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"959f4373fda6e45f6a4041a995ed3ea8a05a5170","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"15e2bcbdf2ffb44707e4c7d0b6ba166fe1598ac0","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"77bfd0b373b0469eb0176167fb076ccda4edf2a7","modified":1492556480000},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"c19f5e28365c7ba6fa938591a8021da7d603253d","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1492556480000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1492556480000},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"6b9eb806e5c8a75b7c344998a05d8dfe61b87a98","modified":1493112397000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1492556480000},{"_id":"public/404/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1493370056247},{"_id":"public/atom.xml","hash":"6c27ade1ac6dc617e7a92a967653aaa6d0d7919b","modified":1493373337837},{"_id":"public/content.json","hash":"0ea46b384a71916e764b98cc4f0f2de8cc8b6fa9","modified":1493373338073},{"_id":"public/search.xml","hash":"dc1817cccb604b11f0d5ecf4a59dc39d6ff4d8ba","modified":1493373338077},{"_id":"public/404.html","hash":"11b9ad4623a7fc567ebb7fb6598a8c5d3bd07670","modified":1493370056469},{"_id":"public/tags/index.html","hash":"873cd79d2c2c886b99977dde6477f0da2fc956b7","modified":1493370056469},{"_id":"public/categories/index.html","hash":"2c989441665f60150241c0067b3675070d4799ca","modified":1493370056469},{"_id":"public/index.html","hash":"71a8f92fb66e76c71d4f46d71ca79328d8cfe457","modified":1493373338079},{"_id":"public/archives/index.html","hash":"df9851b236ea6b5f2d07cda1e3b03f0cde97ee02","modified":1493370056469},{"_id":"public/archives/2017/index.html","hash":"bf8da4818ab43797ccfccd0670e2657b0616cf63","modified":1493370056469},{"_id":"public/archives/2017/04/index.html","hash":"85ff4572ef2ff96ac73a99aff89acec103e645cb","modified":1493370056469},{"_id":"public/categories/Linux/index.html","hash":"a6c679a3d8c1e5287bebfba9e2993bb5bcee0acd","modified":1493370056470},{"_id":"public/tags/CentOS/index.html","hash":"70ca77317fb5a7e406e3fbf34c8e4cfd2d7ce947","modified":1493370056470},{"_id":"public/tags/Perl/index.html","hash":"bc0883c5f474ac44847dfa15b19e4b89eca6373e","modified":1493370056470},{"_id":"public/tags/Python/index.html","hash":"570f9b84af175bf61e50c4a031c3f56d8fa0a8f2","modified":1493370056470},{"_id":"public/about/index.html","hash":"1adae2da6a41207f0d36646b32fb08e0c3e51934","modified":1493370056470},{"_id":"public/2017/04/01/hello-world/index.html","hash":"d545cf864f14b8946f2c0d0ed3da09e155a6b366","modified":1493373338079},{"_id":"public/2017/04/15/centos-s/index.html","hash":"d903f22c56eb361227c45b65e70378ac8f17f8af","modified":1493370056470},{"_id":"public/CNAME","hash":"d9fed198cfd2aef7d93e5a0d7dad30913066266e","modified":1493370056479},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1493370056479},{"_id":"public/img/alipay.jpg","hash":"a0f2a7b537bfe67f67956b8aefa1b1e267408995","modified":1493370056479},{"_id":"public/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1493370056479},{"_id":"public/img/favicon.ico","hash":"67e1d736b3a3b4d8bcb818028790edfc4c4bd301","modified":1493370056479},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1493370056479},{"_id":"public/img/wechat.jpg","hash":"f4d6e66bad3e36c32dbec2dff9c9f56526885c0a","modified":1493370056479},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1493370056480},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1493370056480},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1493370056480},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1493370056480},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1493370056481},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1493370056481},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1493370056515},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1493370056517},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1493370056517},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1493370056517},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1493370056518},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1493370056518},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1493370056518},{"_id":"public/js/search.js","hash":"c3f80dee3bab6bd4895b55b849085c8af7d1e647","modified":1493370056521},{"_id":"public/js/main.min.js","hash":"7355f5a169c02ff32af75b95237ef34e3756e9c8","modified":1493370056521},{"_id":"public/js/search.min.js","hash":"c0c3d048af0d6b840f6f1dfda08911c7bfdb5dc1","modified":1493370056521},{"_id":"public/js/main.js","hash":"5c51b53d59d5131bfa4e9b6a0af3557ee6dc6a85","modified":1493370056521},{"_id":"public/js/embed.min.js","hash":"bf39139ceccbd38a925bc1c434f6229df27b0e7c","modified":1493370056521},{"_id":"public/js/embed.js","hash":"3ac650967aa0f74ec4d7ef5d8d168f7f199e31af","modified":1493370056521},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1493370056521},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1493370056522},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1493370056522},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1493370056533},{"_id":"public/img/avatar.jpg","hash":"6b9eb806e5c8a75b7c344998a05d8dfe61b87a98","modified":1493370056670},{"_id":"public/css/style.css","hash":"0811f05903bb742a442bfebb5da0dd40711502d3","modified":1493370056985}],"Category":[{"name":"Linux","_id":"cj21lz1je0004pgc9wiiij5zf"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2017-04-25T06:17:32.000Z","updated":"2017-04-25T06:17:32.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cj21lz1i20000pgc9wlj3w7v2","content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"layout":"false","title":"My Blog Name | 404","date":"2017-04-25T06:27:26.000Z","_content":"","source":"404/index.md","raw":"---\nlayout: false\ntitle: \"My Blog Name | 404\"\ndate: 2017-04-25 14:27:26\n---\n","updated":"2017-04-25T06:28:22.000Z","path":"404/index.html","comments":1,"_id":"cj21lz1j70001pgc9rc0t3001","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2017-04-25T06:43:40.000Z","_content":"## 关于博主\n\n男，走在路上的数据科学渣\n\n\n## 博文原则\n\n1. 博客内容以原创为主，翻译和转载为辅；\n2. 原创内容若有参考他人文章，在文末给出参考文章链接；\n3. 翻译文章在文章开头给出原文链接；\n4. 对于转载的文章，尊重作者版权，遵守转载协议，文章内容重新排版，并简要评论或修改；\n\n## 版权问题\n\n本博客首发的原创作品，采用“[创作共用BY-NC-SA 4.0 国际许可证](http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)”版权协议。\n\n版权声明如下：\n\n- **允许自由分享、修改博文内容；**修改后博文的解释权归修改者所有\n- **转载需保留署名；**要求在文首或文末给出原文链接及作者信息\n- **严禁他人进行商业性使用；**\n- **若修改了博文内容，则修改后的博文应以相同方式共享；**\n\n对使用者的建议如下：\n\n1. 不转载全文，避免网络文章重复，可采用网摘、引用或链接的方式；\n2. 若要转载，请留言说明，并在文末注明出处；\n\n## 联系方式\n\n学术讨论请通过邮件联系。\n\n- 电子邮箱: [zhangmengxin188@gmail.com](mailto:zhangmengxin188@gmail.com)\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-04-25 14:43:40\n---\n## 关于博主\n\n男，走在路上的数据科学渣\n\n\n## 博文原则\n\n1. 博客内容以原创为主，翻译和转载为辅；\n2. 原创内容若有参考他人文章，在文末给出参考文章链接；\n3. 翻译文章在文章开头给出原文链接；\n4. 对于转载的文章，尊重作者版权，遵守转载协议，文章内容重新排版，并简要评论或修改；\n\n## 版权问题\n\n本博客首发的原创作品，采用“[创作共用BY-NC-SA 4.0 国际许可证](http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)”版权协议。\n\n版权声明如下：\n\n- **允许自由分享、修改博文内容；**修改后博文的解释权归修改者所有\n- **转载需保留署名；**要求在文首或文末给出原文链接及作者信息\n- **严禁他人进行商业性使用；**\n- **若修改了博文内容，则修改后的博文应以相同方式共享；**\n\n对使用者的建议如下：\n\n1. 不转载全文，避免网络文章重复，可采用网摘、引用或链接的方式；\n2. 若要转载，请留言说明，并在文末注明出处；\n\n## 联系方式\n\n学术讨论请通过邮件联系。\n\n- 电子邮箱: [zhangmengxin188@gmail.com](mailto:zhangmengxin188@gmail.com)\n","updated":"2017-04-27T03:53:46.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj21lz1kf000cpgc9hyetqg1e","content":"<h2 id=\"关于博主\"><a href=\"#关于博主\" class=\"headerlink\" title=\"关于博主\"></a>关于博主</h2><p>男，走在路上的数据科学渣</p>\n<h2 id=\"博文原则\"><a href=\"#博文原则\" class=\"headerlink\" title=\"博文原则\"></a>博文原则</h2><ol>\n<li>博客内容以原创为主，翻译和转载为辅；</li>\n<li>原创内容若有参考他人文章，在文末给出参考文章链接；</li>\n<li>翻译文章在文章开头给出原文链接；</li>\n<li>对于转载的文章，尊重作者版权，遵守转载协议，文章内容重新排版，并简要评论或修改；</li>\n</ol>\n<h2 id=\"版权问题\"><a href=\"#版权问题\" class=\"headerlink\" title=\"版权问题\"></a>版权问题</h2><p>本博客首发的原创作品，采用“<a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en\" target=\"_blank\" rel=\"external\">创作共用BY-NC-SA 4.0 国际许可证</a>”版权协议。</p>\n<p>版权声明如下：</p>\n<ul>\n<li><strong>允许自由分享、修改博文内容；</strong>修改后博文的解释权归修改者所有</li>\n<li><strong>转载需保留署名；</strong>要求在文首或文末给出原文链接及作者信息</li>\n<li><strong>严禁他人进行商业性使用；</strong></li>\n<li><strong>若修改了博文内容，则修改后的博文应以相同方式共享；</strong></li>\n</ul>\n<p>对使用者的建议如下：</p>\n<ol>\n<li>不转载全文，避免网络文章重复，可采用网摘、引用或链接的方式；</li>\n<li>若要转载，请留言说明，并在文末注明出处；</li>\n</ol>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><p>学术讨论请通过邮件联系。</p>\n<ul>\n<li>电子邮箱: <a href=\"mailto:zhangmengxin188@gmail.com\" target=\"_blank\" rel=\"external\">zhangmengxin188@gmail.com</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于博主\"><a href=\"#关于博主\" class=\"headerlink\" title=\"关于博主\"></a>关于博主</h2><p>男，走在路上的数据科学渣</p>\n<h2 id=\"博文原则\"><a href=\"#博文原则\" class=\"headerlink\" title=\"博文原则\"></a>博文原则</h2><ol>\n<li>博客内容以原创为主，翻译和转载为辅；</li>\n<li>原创内容若有参考他人文章，在文末给出参考文章链接；</li>\n<li>翻译文章在文章开头给出原文链接；</li>\n<li>对于转载的文章，尊重作者版权，遵守转载协议，文章内容重新排版，并简要评论或修改；</li>\n</ol>\n<h2 id=\"版权问题\"><a href=\"#版权问题\" class=\"headerlink\" title=\"版权问题\"></a>版权问题</h2><p>本博客首发的原创作品，采用“<a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en\">创作共用BY-NC-SA 4.0 国际许可证</a>”版权协议。</p>\n<p>版权声明如下：</p>\n<ul>\n<li><strong>允许自由分享、修改博文内容；</strong>修改后博文的解释权归修改者所有</li>\n<li><strong>转载需保留署名；</strong>要求在文首或文末给出原文链接及作者信息</li>\n<li><strong>严禁他人进行商业性使用；</strong></li>\n<li><strong>若修改了博文内容，则修改后的博文应以相同方式共享；</strong></li>\n</ul>\n<p>对使用者的建议如下：</p>\n<ol>\n<li>不转载全文，避免网络文章重复，可采用网摘、引用或链接的方式；</li>\n<li>若要转载，请留言说明，并在文末注明出处；</li>\n</ol>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><p>学术讨论请通过邮件联系。</p>\n<ul>\n<li>电子邮箱: <a href=\"mailto:zhangmengxin188@gmail.com\">zhangmengxin188@gmail.com</a></li>\n</ul>\n"},{"title":"tags","date":"2017-04-25T02:55:34.000Z","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-04-25 10:55:34\nlayout: tags\ncomments: false\n---\n","updated":"2017-04-25T02:56:39.000Z","path":"tags/index.html","_id":"cj21lz1kf000dpgc9eqhwvaqv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2017-04-25T02:57:05.000Z","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-04-25 10:57:05\nlayout: categories\ncomments: false\n---\n","updated":"2017-04-25T02:57:39.000Z","path":"categories/index.html","_id":"cj21lz1kh000epgc9vm4aasfp","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"用 CentOS 7 打造合适的科研环境","author":"Messiah","date":"2017-04-14T16:00:00.000Z","updated":"2017-04-18T16:00:00.000Z","_content":"\n这篇博文记录了我用 CentOS 7 搭建 **数据科学生产环境** 的过程，供我个人在未来重装系统时参考。对于其他同学，也许有借鉴意义。\n\n阅读须知：\n\n1.  **不推荐刚接触 Linux 的人使用 CentOS 发行版**；\n2.  本文尽量写的浅显易懂，但要求读者掌握 Linux 基础知识；\n3.  本文所有操作均在 CentOS 7 下完成，其他发行版或多或少与 CentOS 7 不同，因而仅供参考；\n4.  本文所安装的软件纯粹出于个人习惯及喜好，读者应自己判断，按需安装；\n\n<!--more-->\n\n## 安装 CentOS\n\nCentOS 7 的安装与其他 Linux 发行版的安装差不多，个别地方稍有不同。\n\n### 准备工作\n\n1.  准备材料\n    -   U 盘：容量 2GB 以上，用于制作 U 盘启动盘，因为在制作启动盘时会格式化 U 盘，所以 U 盘内不要包含重要资料\n    -   [CentOS 7.2 LiveCD ISO 镜像文件](http://mirrors.ustc.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-LiveGNOME-1511.iso)\n    -   [Universal USB installer](http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/)：Windows 下的 U 盘启动盘制作工具\n    -   一个已安装 Windows 的电脑：用于制作 U 盘启动盘\n\n2.  运行 Universal USB installer 并制作 U 盘启动盘\n3.  将 U 盘插入计算机，重启，进入 BIOS 选择从 U 盘启动，即可进入 CentOS 的 LiveCD\n4.  进入 LiveCD 后，点击桌面的 “Install to Hard Drive” 即可安装\n\n注：Linux 下可以通过 `dd` 命令制作启动盘，但由于对原理不够了解，偶尔会导致制作失败，\n或制作成功后 U 盘容量有问题，还是用 Windows 下的 Universal USB installer 比较靠谱。\n\n### 安装过程\n\n1.  选择安装过程中使用的语言，这里应 **使用英语，不要使用汉语**。若安装界面使用汉语，最终安装的系统中会出现两个比较麻烦的问题：\n    1.  家目录下的系统文件夹如 Downloads、Desktop 等会以中文表示，这使得在命令行 `cd` 变得很麻烦；\n    2.  终端中某些字符用英文字体，某些字符用中文字体，效果非常差，需要自己修改终端字体方可；\n\n2.  选择区域和城市：Asia 和 Shanghai\n3.  键盘使用 English(US) 而不是 English(UK)\n4.  Hostname 可以改也可以不改，我用 `saturn.geolab`\n5.  安装的目的地，选择要使用的硬盘，在 “Other Storage Options” 处选择“I will configure partioning”，即手动分区\n\n### 分区\n\nCentOS7 的分区似乎比较特别，自认为经验很丰富的我在第一次安装 CentOS7 时还是在分区上耽误了很多时间。后来找到比较合适的分区方法，如下：\n\n-   点击 “Click here to create them automatically”，即让安装程序帮忙分区\n-   默认的分区方案是使用 LVM，其好处在于 “当机器有多块硬盘时，在使用的时候看上去只有一块”\n-   默认的文件系统为 XFS 而不是以前常用的 EXT4；\n-   自动分区完成后，再根据自己的需求，手动修改分区细节\n    -   `/boot` ：CentOS 自动分配，一定不要乱改；\n    -   `/` ：根目录，合理使用并及时清理的话 15G 就够了，不过建议 30G 以上；\n    -   `swap` ：与物理内存大小一致即可\n    -   `/opt` ：个人习惯是将第三方软件都安装在 `/opt` 下，所以分了 70G\n    -   `/home` ：余下的全部空间\n-   点击 “Begin to Install” 开始安装\n\n### 真正的安装\n\n1.  设置 root 密码\n2.  创建一般用户\n3.  等待安装完成\n4.  安装完成，重启\n5.  重启后，同意 License 即可\n\n## 对系统的若干修改\n\n### 若干原则\n\n为了搭建一个稳定的系统，尽量避免因为各种瞎折腾而导致的系统问题，特订立了一些软件安装的原则。\n具体参见《[CentOS7 下的软件安装方法与策略](/how-to-install-softwares-under-centos-7.html)》。\n\n### 给一般账号 root 权限\n\n默认情况下，一般账号是没有 root 权限的。为什么不直接用 root 账号，而是要给一般账号 root 权限呢？\n\n-   **日常工作中使用 root 账号，是非常糟糕且危险的习惯！无论是服务器还是个人电脑都是如此。**\n-   安装软件时需要 root 权限，只能 `su` 切换到 root 账户再安装。对于习惯使用 `sudo` 的人来说，还是有些麻烦。\n\n假设账户名为 seisman，要授予他 root 权限，则要修改配置文件 `/etc/sudoers` :\n\n    $ su\n    # echo 'seisman ALL=(ALL) ALL'>> /etc/sudoers # 向配置文件中加入语句\n    # tail -1 /etc/sudoers  # 检查一下是否正确\n    seisman ALL=(ALL) ALL\n\n其中 seisman 为当前用户名。\n\n### 添加第三方源\n\nCentOS 由于很追求稳定性，所以官方源中自带的软件不多，因而需要一些第三方源，比如\nEPEL、ATrpms、ELRepo、Nux Dextop、RepoForge 等。根据上面提到的软件安装原则，为了尽\n可能保证系统的稳定性，此处大型第三方源只添加 EPEL 源、Nux Dextop 和 ELRepo 源。\n\n#### EPEL\n\n[EPEL](https://fedoraproject.org/wiki/EPEL) 即 Extra Packages for Enterprise Linux，\n为 CentOS 提供了额外的 10000 多个软件包，而且在不替换系统组件方面下了很多功夫，因而可以放心使用。\n\n``` bash\nsudo yum install epel-release\n```\n\n执行完该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `epel.repo` 文件。\n\n<!-- #### Nux Dextop\n\n[Nux Dextop](http://li.nux.ro/repos.html) 中包含了一些与多媒体相关的软件包，作者尽量\n保证不覆盖 base 源。官方说明中说该源与 EPEL 兼容，实际上个别软件包存在冲突，但基本不会造成影响:\n\n    sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm\n\n完成该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `nux-dextop.repo` 文件。-->\n\n#### ELRepo\n\nELRepo 包含了一些硬件相关的驱动程序，比如显卡、声卡驱动:\n\n    sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n    sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n\n完成该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `elrepo.repo` 文件。\n\n### 安装 yum-axelget\n\n[yum-axelget](https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/yum-axelget.html) 是 EPEL\n提供的一个 yum 插件。使用该插件后用 yum 安装软件时可以并行下载，大大提高了软件的下载速度，减少了下载的等待时间:\n\n    sudo yum install yum-axelget\n\n安装该插件的同时会安装另一个软件 axel。axel 是一个并行下载工具，在下载 http、ftp 等简单协议的文件时非常好用。\n\n### 第一次全面更新\n\n在进一步操作之前，先把已经安装的软件包都升级到最新版:\n\n    sudo yum update\n\n要更新的软件包有些多，可能需要一段时间。不过有了 yum-axelget 插件，速度已经快了很多啦。\n\n### 重启\n\n第一次全面更新完之后建议重启。\n\n### 删除多余的 kernel\n\n在前面的 `yum update` 执行之后，可能会将 kernel 也一起更新，则在启动 CentOS 时启动项中会有很多项。\n\n确认当前使用的 kernel 版本号:\n\n    $ uname -r\n    3.10.0-123.9.3.el7.x86_64\n\n查找当前系统安装的所有 kernel:\n\n    $ rpm -qa | grep kernel | sort\n    kernel-3.10.0-123.8.1.el7.x86_64\n    kernel-3.10.0-123.9.2.el7.x86_64\n    kernel-3.10.0-123.9.3.el7.x86_64\n    kernel-devel-3.10.0-123.8.1.el7.x86_64\n    kernel-devel-3.10.0-123.9.2.el7.x86_64\n    kernel-devel-3.10.0-123.9.3.el7.x86_64\n    kernel-headers-3.10.0-123.9.3.el7.x86_64\n    kernel-tools-3.10.0-123.9.3.el7.x86_64\n    kernel-tools-libs-3.10.0-123.9.3.el7.x86_64\n\n可以看出有三个版本的 kernel，123.8.1、123.9.2 和 123.9.3。除了最新的 kernel 外，建议多保留一个旧 kernel，以免新 kernel 出现问题时可以通过旧 kernel 进入系统。因而此处删除 123.8.1 版本的 kernel:\n\n    sudo yum remove kernel-3.10.0-123.8.1.el7.x86_64\n    sudo yum remove kernel-devel-3.10.0-123.8.1.el7.x86_64\n\n## 基础开发环境\n\n### GCC 系列\n\n    sudo yum install gcc                     # C 编译器\n    sudo yum install gcc-c++                 # C++ 编译器\n    sudo yum install gcc-gfortran            # Fortran 编译器\n    sudo yum install compat-gcc-44           # 兼容 gcc 4.4\n    sudo yum install compat-gcc-44-c++       # 兼容 gcc-c++ 4.4\n    sudo yum install compat-gcc-44-gfortran  # 兼容 gcc-fortran 4.4\n    sudo yum install compat-libf2c-34        # g77 3.4.x 兼容库\n\n### 软件开发辅助工具\n\n    sudo yum install make\n    sudo yum install gdb     # 代码调试器\n    sudo yum install cmake   # Cmake\n    sudo yum install git     # 版本控制\n\n## 驱动程序\n\n### 显卡驱动\n\nLinux 默认只使用开源的显卡驱动，就目前的情况来看，开源驱动的效果还是不错的，但跟官方的\n闭源驱动相比还是有一定差距。最明显的区别是，在使用 SAC 的 ppk 功能放大波形时，使用开源驱动会\n出现延迟，而使用官方闭源则整个过程非常顺畅。\n\n关于显卡驱动的安装，请参考 [Linux 下安装 nvidia 显卡驱动](/install-nvidia-drivers-under-linux.html)\n一文中的 “从 ELRepo 源中安装驱动” 部分。\n\n**注意**：目前的显卡驱动似乎有问题，安装后终端有时会出现屏幕闪烁、一屏文字上下重复跳动的情况，\n稍微有些影响用 vim 写代码。是否要安装显卡驱动自己决定。\n\n### NTFS 驱动\n\nCentOS 下默认无法挂载 NTFS 格式的硬盘。需安装 nfts-3g 即可实现即插即用:\n\n    sudo yum install ntfs-3g\n\n## 进阶开发环境\n\n### Java 环境\n\nJava 的一大特色在于跨平台，安装了 Java 运行环境，即可运行 Java 程序:\n\n    sudo yum install java                        # java 运行环境\n\n### Clang 系列\n\nClang 可以认为是 GCC 的替代品，可以用于编译 C、C++、Objective-C 和 Objective-C++。其提供了更友好的\n报错信息，在有些方面比 GCC 更友好，同时其提供了一个代码静态分析器，可以用于分析代码中可能出现的 bug 和内存溢出问题。\n\n    sudo yum install clang             # clang 编译器\n    sudo yum install clang-analyzer    # clang 静态分析器\n\n### Intel 系列\n\nIntel 的大部分软件都是非开源且收费的，但同时部分软件也提供了 Linux 下的非商业免费版。\n比如 icc、mkl 数学库以及代码性能分析工具等。\n\nIntel 软件的申请以及安装参考《[Intel 非商业免费开发工具](/intel-non-commercial-software.html)》。\n\n还有一点需要注意的是，Intel 也提供了并行相关的几个命令，比如 mpicc、mpirun。所以 openmpi、mpich\n和 intel 三者，在并行时只能用其中一个。\n\n### 并行计算\n\n并行可以用 openmpi，也可以用 mpich，二者的功能可以认为是完全相同的。由于二者提供了几乎一样的命令，\n所以二者可以同时安装，但是不可以同时处于使用状态。\n\n#### openmpi\n\n安装 openmpi:\n\n    sudo yum install openmpi openmpi-devel\n\n安装后，二进制文件位于 `/usr/lib64/openmpi/bin` 下，动态库文件位于 `/usr/lib64/openmpi/lib`\n下，因而实际使用的话还需要额外的配置，在 `.bashrc` 中加入如下语句:\n\n    export PATH=/usr/lib64/openmpi/bin/:${PATH}\n    module load mpi/openmpi-x86_64\n\nPS：要使用 `module` 命令需要先安装 `environment-modules` 包。\n\n#### mpich\n\n安装 mpich:\n\n    sudo yum install mpich mpich-devel\n\n安装后，二进制文件位于 `/usr/lib64/mpich/bin` 下，动态库文件位于 `/usr/lib64/mpich/lib` 下，\n因而实际使用的话还需要额外的配置，在 `.bashrc` 中加入如下语句:\n\n    export PATH=/usr/lib64/mpich/bin/:${PATH}\n    module load mpi/mpich-x86_64\n\n## 脚本语言环境\n\n### Perl\n\nCentOS 7.0 自带了 Perl 5.16.3（2013 年 03 月 11 日发布），目前的最新版本为 5.20.1（2014 年 09 月 14 日发布）。\n\n#### 系统自带 Perl\n\n系统自带 Perl，就目前来看，版本不算老，基本够用。官方源和 EPEL 源中提供了 1000 多个模块，可以直接用 yum 安装:\n\n    sudo yum install perl-Parallel-ForkManager  # 并行模块\n\n若源中没有已打包好的模块，也可以使用 perl 自带的 cpan 来安装模块。\n\n优先级：yum > cpan。\n\n#### plenv 管理新版本\n\n若需要使用最新版本的 perl，可以使用 [plenv](/perl-plenv.html) 安装新版本的 perl，并使用 plenv 提供的 cpanm 命令安装模块:\n\n    cpanm install Parallel::ForkManager # 并行模块\n\n### Python\n\nCentOS 7.0 自带 Python 2.7.5，目前 Python 2 的最新版本为 2.7.8，Python 3 的最新版本为 3.4.2。\n\n#### 系统自带 Python\n\n系统自带的 Python 2.7.5，基本已经够用，Python 2 常用的模块在官方源或 EPEL 源中也有有编译好的包，\n因而直接通过 yum 安装即可:\n\n    sudo yum install python-matplotlib  # 2D 绘图库\n    sudo yum install PyQt4  # Qt4 的 Python 绑定\n    sudo yum install numpy  # 数组操作库\n    sudo yum install scipy  # 科学计算库\n    sudo yum install python-requests  # 网页请求\n    sudo yum install python-docopt  # 命令行参数分析器\n    sudo yum install gdal-python    # gdal 的 Python 绑定\n\n#### pyenv 管理 Python3\n\nPython2 与 Python3 之间是不完全兼容的，而我以 Python3 为主，所以需要安装一个 Python3。\n\n首先，安装 [pyenv](/python-pyenv.html) 来管理多个 Python 版本，然后利用 pyenv 安装 anaconda3\n（即 Python3.4）。anaconda 自带了众多科学计算所需的包，免去了安装的麻烦，对于其他包，\n则可以利用 Python 自带的 pip 安装:\n\n    pip install requests\n    pip install docopt\n\n## 编程相关软件\n\n### 编辑器\n\n写代码的时候选一个好用的编辑器很重要，用的比较多的编辑器如下：\n\n1.  vim\n2.  emacs\n3.  atom\n4.  sublime text 3\n5.  Visual Studio Code\n\n### IDE\n\n-   Python IDE：[PyCharm Community Edition](https://www.jetbrains.com/pycharm/)\n\n## 日常软件\n\n### Office 套件\n\n#### LibreOffice\n\n大多数 Linux 发行版都自带 LibreOffice:\n\n    sudo yum install libreoffice\n\nLibreOffice 与 Microsoft Office 的兼容性不太好，操作界面与 MS Office 也有较大差异，让人不太习惯。\n\n#### WPS Office\n\n若在 Linux 下对于文档处理有更高一些的要求，可以尝试目前还处于测试版的 WPS Office for Linux。\nWPS Office 的兼容性以及界面都比 LibreOffice 要好很多，值得期待，当然还是不能做到完全兼容 MS\nOffice。\n\n安装过程参考 [CentOS 下安装 WPS Office](/wps-office-for-centos7.html) 一文。\n\n### PS/PDF 阅读器\n\n系统自带的 evince 阅读器，可以打开 PS 和 PDF 文件，基本足够日常的使用了。\n\n#### zathura\n\nzathura 可以查看 PS、PDF、djvu 格式的文件，可以作为 evince 的替代品:\n\n    sudo yum install zathura zathura-plugins-all\n\n#### ghostscript\n\n    sudo yum install ghostscript\n\n#### master-pdf-editor\n\n官方网站: <https://code-industry.net/free-pdf-editor/>\n\n    sudo yum localinstall http://get.code-industry.net/public/master-pdf-editor3-3.2.62-1.x86_64.rpm\n\n### TeX Live 2015\n\n系统是自带了 TeXLive，版本较老，还是安装最新版比较好。\n\n参考 [Linux 下安装 TeXLive](/install-texlive-under-linux.html) 一文。\n\n### Mendeley\n\nMendeley 是一个跨平台的文献管理软件，其内部自带了一个可以添加注释的 PDF 阅读器。\n\n下载 Generic Linux (64 bits)：http://www.mendeley.com/download-mendeley-desktop\n\n安装:\n\n    tar -xvf mendeleydesktop-1.12.3-linux-x86_64.tar.bz2  # 解压\n    sudo mv mendeleydesktop /opt  # 复制到 / opt 下\n    cd /opt/mendeleydesktop/bin   # cd 进去\n    ./install-mendeley-link-handler.sh /opt/mendeleydesktop/bin/mendeleydesktop\n    sudo yum install qtwebkit  # 安装依赖包\n\n注销重新登陆，在 Application->Education 下即可看到 mendeley 的相关项目。不过是\n没有软件的图标的，强迫症不能忍，用下面的命令解决:\n\n    cp /opt/mendeleydesktop/share/icons/hicolor/128x128/apps/mendeleydesktop.png ~/.local/share/icons/\n\n### Google Chrome 浏览器\n\n默认的浏览器是 Firefox，还是更喜欢 Chrome 浏览器。\n\nGoogle 官方源在国内可能无法正常访问，故而添加 Fedora 中文社区提供的镜像源:\n\n    sudo wget http://repo.fdzh.org/chrome/google-chrome-mirrors.repo -P /etc/yum.repos.d/\n\n安装:\n\n    sudo yum install google-chrome-stable\n\n### Opera 浏览器\n\n也可以选择 Opera 浏览器。\n\n下载地址：http://www.opera.com/download/guide/?os=linux\n\n选择 CentOS RPM package 进行下载。下载完成后，执行:\n\n    sudo yum localinstall opera-12.16-1860.x86_64.rpm\n\n想要卸载的话，就执行:\n\n    sudo yum remove opera\n\n### Flash 插件\n\nFlash 插件主要是看在线视频的时候要用。Google 浏览器自带了 Flash 插件，所以这里安装的 flash 插件主要是为了 firefox。\n\n    sudo rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm\n    sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\n    sudo yum install flash-plugin\n\n### 解压软件\n\n解压 7z 或 zip 格式需要 p7zip，由 EPEL 提供:\n\n    sudo yum install p7zip\n\n解压 rar 格式可以使用 [unar](https://unarchiver.c3.cx/commandline)，该软件位于 EPEL 源中：\n\n    sudo yum install unar\n\n### FTP 客户端\n\nFTP 客户端，还是有界面的 filezilla 比较方便些。\n\n    sudo yum install filezilla\n\n### Google Earth\n\n到 https://www.google.com/earth/download/ge/agree.html 下载64位rpm包，执行如下命令安装:\n\n    sudo yum localinstall google-earth-stable_current_x86_64.rpm\n\n## 效率类软件\n\n这一类工具能够在不同方面提高科研的效率，也提高了使用者的体验。\n\n### 终端模拟器\n\nGnome 自带的终端模拟器是 gnome-terminal。经常会需要开十几个终端，切换和管理起来比较麻烦。\n\n#### terminator\n\nterminator 有很多功能，我只用到了终端分割的功能。 `Ctrl+Shift+O` 对终端水平分隔，\n`Ctrl+Shift+E` 对终端垂直分隔， `Alt + 上下左右 ` 可以在各子终端中切换。terminator 由 Nux Dextop 提供:\n\n    sudo yum install terminator\n\n#### guake\n\n有些时候需要临时执行一两个命令，但是又不想额外启动一个终端的情况下，guake 是个不错的选择。\n\n    sudo yum install guake\n\n安装完成后，在 Application->System Tools 里找到 guake Terminal 即可启动。按下 F12\n即可呼出 guake，再次按下 F12 即可隐藏。也可在终端执行 `guake-prefs` 对 gauke 进行配置。\n\n### zsh 与 oh my zsh\n\nLinux 下有很多 shell，比如最常见的 bash，除此之外还有 csh、ksh。zsh 也是一个 shell。\n\nzsh 的特点在于：\n\n-   语法基本完全兼容于 bash，一般用户完全体会不到其区别\n-   zsh 提供命令补全特性，比 bash 的补全要更好用\n-   可配置性强\n\n完全不经配置的 zsh 已经很好用了，一般用户也没必要花时间研究配置。\n[oh my zsh](https://github.com/robbyrussell/oh-my-zsh) 是一群人一起维护的一套 zsh 配置文件。\n直接用这个配置文件，稍稍了解一点会有更好的体验。\n\n安装 zsh:\n\n    sudo yum install zsh\n\n安装 oh my zsh:\n\n    curl -L http://install.ohmyz.sh | sh\n\n上面的命令，做了如下几件事情：\n\n-   下载 `oh my zsh` 到 `~/.oh-my-zsh`\n-   备份已有的 zsh 配置文件 `~/.zshrc` ，并复制新的 `.zshrc` 文件\n-   将当前用户的默认 shell 由 bash 改成 zsh\n\n第三步中，会报错如下： `chsh: \"/usr/bin/zsh\" is not listed in /etc/shells.` ，需要手动修改默认 shell:\n\n    chsh -s /bin/zsh\n\nchsh 命令修改的是 login shell，因而需要退出当前用户并重新登陆，以后用户的默认 shell\n就从 bash 变成了 zsh，所有的配置都不用写到 `.bashrc` 而要写到 `.zshrc` 中。\n\n在 `.zshrc` 中可以选择喜欢的主题，以及适当数量的插件。下面列出我在用的插件:\n\n1.  git\n\n    该插件为 git 的众多常用命令提供了更简单的别名，比如 `git status` 的别名是 `gst`，\n    大大减少了击键数。但该插件中 `git mergetool --no-prompt` 的别名是 `gmt`，\n    与 GMT 软件冲突，需要将该插件的目录 git 复制到 custom/plugins 下，然后删除其中的 gmt 别名；\n\n2.  命令补全插件: pip, pyenv\n3.  sudo：按两下 `ESC` 即可在当前命令前加上 `sudo`\n4.  yum：为常见的 yum 命令提供别名\n\n### autojump\n\n[autojump](https://github.com/joelthelion/autojump) 是一个非常智能的目录快速切换的工具。简单演示如下:\n\n    $ pwd\n    /home/seisman\n    $ cd Desktop\n    $ cd /opt\n    $ cd /usr/local\n\n    # 用 j 命令迅速从 / usr/local 跳转到与 des 匹配的目录，这里只有 Desktop 可以匹配\n    $ j des\n    $ pwd\n    /home/seisman/Desktop\n\n用法差不多就这样，具体看项目主页。\n\n安装:\n\n    sudo yum install autojump\n    sudo yum install autojump-zsh\n\n### 中文输入法\n\n由于使用的是全英文安装，所以默认是没有中文输入法的。\n\n在“Application”->“Settings”->“Region & Language” 中将“Chinese（Intelligent Pinyin）”添加到“Input Sources” 中即可使用中文输入法。默认使用“Shift”键切换中文输入法。\n\n### 等宽字体\n\n编程要用等宽字体，这点是常识了。一款适合编程的等宽字体，至少要满足如下几个要求：\n\n1.  易于区分 “1”、“i” 和“l”\n2.  易于区分 “0”、“o” 和“O”\n3.  易于区分中文下的左引号和右引号\n4.  美观\n\n目前选择的 Source Code Pro。将解压后的字体文件放在 `~/.fonts` 目录下，并修改终端、gedit 以及其他编辑器、IDE 等的默认字体。\n\n## 虚拟机\n\n有时候可能需要在 Windows 下做一些操作，如果机器性能足够好的话，可以安装虚拟机。\n\n### VirtualBox 虚拟机\n\nVirtuabBox 的安装:\n\n    wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\n    sudo mv virtualbox.repo /etc/yum.repos.d/\n    sudo yum install VirtualBox-5.0\n\n需要注意两点：\n\n-   若机器性能不够，虚拟机的使用体验会非常差，所以不建议在老机器上使用；\n-   更新 kernel 之后需要执行 `sudo /sbin/rcvboxdrv setup` ；\n-   在 VirtualBox 安装虚拟系统后，记得使用 “设备”->“安装增强功能”，使用效果会更好；\n\n### gnome-boxes\n\ngnome-boxes 是 GNOME3 开发的一个虚拟机工具，使用体验不如 VirtualBox:\n\n    sudo yum install gnome-boxes\n\n### Wine\n\nWine 是一个可以让 Windows 程序运行在 Linux 下的软件。类似虚拟机，但跟虚拟机又不太一样:\n\n    sudo yum install wine\n\n## 同步网盘\n\n网盘根据功能大概可以分为两类：同步网盘和备份网盘。既然是同步网盘，Linux 下\n的客户端必不可少。就目前已知的情况来看，CentOS7 下能使用的同步网盘只有三个：\nDropbox、MEGA 和坚果云。\n\n我主要用同步网盘将 Linux 机器上的 PDF 文献同步到 iPad 上。\n\n### Dropbox\n\n又是一个被墙的工具，熟练掌握科学上网技巧的人可以使用，一般人还是不要用了。\n\n    wget https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\n    sudo rpm -i nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\n\n### MEGA\n\nMEGA： <https://mega.co.nz/>\n\n免费容量 50G，作为同步盘来说基本是够用了。\n\n    # 下载主程序\n    wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/megasync-CentOS_7.x86_64.rpm\n    # 下载文件管理器扩展（可选）\n    wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/nautilus-megasync-CentOS_7.x86_64.rpm\n    sudo yum localinstall megasync-CentOS_7.x86_64.rpm\n    sudo yum localinstall nautilus-megasync-CentOS_7.x86_64.rpm\n\n### 坚果云\n\n国内的全平台同步网盘，不限空间，但限制每月上传流量 1G，下载流量 3G。\n\n    # 坚果云依赖于 notify-python\n    sudo yum install notify-python\n    # 下载\n    wget https://jianguoyun.com/static/exe/installer/fedora/nautilus_nutstore_amd64.rpm\n    sudo rpm -i nautilus_nutstore_amd64.rpm\n\n## 工具软件\n\n### 视频下载工具\n\n[you-get](https://github.com/soimort/you-get) 和 [youtube-dl](https://github.com/rg3/youtube-dl)\n是两个用于从视频网站上下载视频文件的工具。其中，后者支持的网站更多，但前者对国内的视频网站支持更好。\n\n    pip install you-get\n    pip install youtube-dl\n    # EPEL 中提供了 youtube-dl 包，因而也可以使用 yum 安装。一般来说，pip 安装的版本更新一些\n\n### PDF 处理工具\n\n[cpdf](http://community.coherentpdf.com/) 是一个跨平台的 PDF 处理工具，可以完成常见的 PDF 合并、\n切割、加密解密、书签、水印等功能。\n\n下载已编译好的 [二进制包](https://github.com/coherentgraphics/cpdf-binaries/archive/master.zip)，\n解压，并将与自己的平台对应的二进制文件复制到 `${HOME}/bin` 目录下即可使用。\n\n### BT 软件\n\ntransmission 是 Linux 下常用的 Torrent 下载软件:\n\n    sudo yum install transmission\n\n在 “Application”->“Internet”-> 中可以启动 transmission。\n\n### uGet\n\n<http://ugetdm.com/>\n\nuGet 是 Linux 下的一个下载工具，支持 HTTP、HTTPS、FTP、Torrent 等，支持多连接，并可以监视剪贴板:\n\n    sudo yum --enablerepo=epel-testing install uget aria2\n\n### 截图软件 shutter\n\nGNOME 自带了截图工具。 `PrtScn` 为截取整个屏幕； `Alt+PrtScn` 为截取当前窗口；\n`Shift+PrtScn` 为自定义截屏区域。\n\n[shutter](http://shutter-project.org/) 是一个功能更强大的截图工具，支持不同的截图方式、\n图片格式，还支持图片的简单编辑与注释:\n\n    sudo yum install shutter\n\n可以通过 [修改快捷键使 shutter 成为默认的截图工具](http://shutter-project.org/faq-help/set-shutter-as-the-default-screenshot-tool/)。\n\n### 其他工具\n\n    sudo yum install nfs-utils     # 挂载 NFS 文件系统所必须\n    sudo yum install xclip         # 终端的文本复制工具\n    sudo yum install ImageMagick   # 其中的 import 和 convert 命令很有用\n    sudo yum install dos2unix unix2dos  # Windows 和 Linux 换行符互相转换\n    sudo yum install meld          # 图形界面下的文件差异比较工具\n\n## 娱乐\n\n### 影音播放器\n\nNux Dextop 提供了 mplayer 和 VLC，可以用于播放常见格式的音频和视频，二者选其一安装即可:\n\n    sudo yum install mplayer\n    sudo yum install vlc\n\n### 游戏\n\n    sudo yum install 2048-cli   # 2048 命令行版\n\n## 参考\n\n1.  [ELRepo 官方网站](http://elrepo.org/tiki/tiki-index.php)\n2.  [ELRepo kmod-nvidia](http://elrepo.org/tiki/kmod-nvidia)\n3.  [CentOS Yum 软件库样例](http://wiki.centos.org/zh/AdditionalResources/Repositories/GoogleYumRepos)\n\n## 修订历史\n\n-   2017-04-15：初稿；","source":"_posts/centos-s.md","raw":"---\ntitle: 用 CentOS 7 打造合适的科研环境\nauthor: Messiah\ndate: 2017-04-15\nupdated: 2017-04-19\ncategories: Linux\ntags: [CentOS, Perl, Python]\n---\n\n这篇博文记录了我用 CentOS 7 搭建 **数据科学生产环境** 的过程，供我个人在未来重装系统时参考。对于其他同学，也许有借鉴意义。\n\n阅读须知：\n\n1.  **不推荐刚接触 Linux 的人使用 CentOS 发行版**；\n2.  本文尽量写的浅显易懂，但要求读者掌握 Linux 基础知识；\n3.  本文所有操作均在 CentOS 7 下完成，其他发行版或多或少与 CentOS 7 不同，因而仅供参考；\n4.  本文所安装的软件纯粹出于个人习惯及喜好，读者应自己判断，按需安装；\n\n<!--more-->\n\n## 安装 CentOS\n\nCentOS 7 的安装与其他 Linux 发行版的安装差不多，个别地方稍有不同。\n\n### 准备工作\n\n1.  准备材料\n    -   U 盘：容量 2GB 以上，用于制作 U 盘启动盘，因为在制作启动盘时会格式化 U 盘，所以 U 盘内不要包含重要资料\n    -   [CentOS 7.2 LiveCD ISO 镜像文件](http://mirrors.ustc.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-LiveGNOME-1511.iso)\n    -   [Universal USB installer](http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/)：Windows 下的 U 盘启动盘制作工具\n    -   一个已安装 Windows 的电脑：用于制作 U 盘启动盘\n\n2.  运行 Universal USB installer 并制作 U 盘启动盘\n3.  将 U 盘插入计算机，重启，进入 BIOS 选择从 U 盘启动，即可进入 CentOS 的 LiveCD\n4.  进入 LiveCD 后，点击桌面的 “Install to Hard Drive” 即可安装\n\n注：Linux 下可以通过 `dd` 命令制作启动盘，但由于对原理不够了解，偶尔会导致制作失败，\n或制作成功后 U 盘容量有问题，还是用 Windows 下的 Universal USB installer 比较靠谱。\n\n### 安装过程\n\n1.  选择安装过程中使用的语言，这里应 **使用英语，不要使用汉语**。若安装界面使用汉语，最终安装的系统中会出现两个比较麻烦的问题：\n    1.  家目录下的系统文件夹如 Downloads、Desktop 等会以中文表示，这使得在命令行 `cd` 变得很麻烦；\n    2.  终端中某些字符用英文字体，某些字符用中文字体，效果非常差，需要自己修改终端字体方可；\n\n2.  选择区域和城市：Asia 和 Shanghai\n3.  键盘使用 English(US) 而不是 English(UK)\n4.  Hostname 可以改也可以不改，我用 `saturn.geolab`\n5.  安装的目的地，选择要使用的硬盘，在 “Other Storage Options” 处选择“I will configure partioning”，即手动分区\n\n### 分区\n\nCentOS7 的分区似乎比较特别，自认为经验很丰富的我在第一次安装 CentOS7 时还是在分区上耽误了很多时间。后来找到比较合适的分区方法，如下：\n\n-   点击 “Click here to create them automatically”，即让安装程序帮忙分区\n-   默认的分区方案是使用 LVM，其好处在于 “当机器有多块硬盘时，在使用的时候看上去只有一块”\n-   默认的文件系统为 XFS 而不是以前常用的 EXT4；\n-   自动分区完成后，再根据自己的需求，手动修改分区细节\n    -   `/boot` ：CentOS 自动分配，一定不要乱改；\n    -   `/` ：根目录，合理使用并及时清理的话 15G 就够了，不过建议 30G 以上；\n    -   `swap` ：与物理内存大小一致即可\n    -   `/opt` ：个人习惯是将第三方软件都安装在 `/opt` 下，所以分了 70G\n    -   `/home` ：余下的全部空间\n-   点击 “Begin to Install” 开始安装\n\n### 真正的安装\n\n1.  设置 root 密码\n2.  创建一般用户\n3.  等待安装完成\n4.  安装完成，重启\n5.  重启后，同意 License 即可\n\n## 对系统的若干修改\n\n### 若干原则\n\n为了搭建一个稳定的系统，尽量避免因为各种瞎折腾而导致的系统问题，特订立了一些软件安装的原则。\n具体参见《[CentOS7 下的软件安装方法与策略](/how-to-install-softwares-under-centos-7.html)》。\n\n### 给一般账号 root 权限\n\n默认情况下，一般账号是没有 root 权限的。为什么不直接用 root 账号，而是要给一般账号 root 权限呢？\n\n-   **日常工作中使用 root 账号，是非常糟糕且危险的习惯！无论是服务器还是个人电脑都是如此。**\n-   安装软件时需要 root 权限，只能 `su` 切换到 root 账户再安装。对于习惯使用 `sudo` 的人来说，还是有些麻烦。\n\n假设账户名为 seisman，要授予他 root 权限，则要修改配置文件 `/etc/sudoers` :\n\n    $ su\n    # echo 'seisman ALL=(ALL) ALL'>> /etc/sudoers # 向配置文件中加入语句\n    # tail -1 /etc/sudoers  # 检查一下是否正确\n    seisman ALL=(ALL) ALL\n\n其中 seisman 为当前用户名。\n\n### 添加第三方源\n\nCentOS 由于很追求稳定性，所以官方源中自带的软件不多，因而需要一些第三方源，比如\nEPEL、ATrpms、ELRepo、Nux Dextop、RepoForge 等。根据上面提到的软件安装原则，为了尽\n可能保证系统的稳定性，此处大型第三方源只添加 EPEL 源、Nux Dextop 和 ELRepo 源。\n\n#### EPEL\n\n[EPEL](https://fedoraproject.org/wiki/EPEL) 即 Extra Packages for Enterprise Linux，\n为 CentOS 提供了额外的 10000 多个软件包，而且在不替换系统组件方面下了很多功夫，因而可以放心使用。\n\n``` bash\nsudo yum install epel-release\n```\n\n执行完该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `epel.repo` 文件。\n\n<!-- #### Nux Dextop\n\n[Nux Dextop](http://li.nux.ro/repos.html) 中包含了一些与多媒体相关的软件包，作者尽量\n保证不覆盖 base 源。官方说明中说该源与 EPEL 兼容，实际上个别软件包存在冲突，但基本不会造成影响:\n\n    sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm\n\n完成该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `nux-dextop.repo` 文件。-->\n\n#### ELRepo\n\nELRepo 包含了一些硬件相关的驱动程序，比如显卡、声卡驱动:\n\n    sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n    sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n\n完成该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `elrepo.repo` 文件。\n\n### 安装 yum-axelget\n\n[yum-axelget](https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/yum-axelget.html) 是 EPEL\n提供的一个 yum 插件。使用该插件后用 yum 安装软件时可以并行下载，大大提高了软件的下载速度，减少了下载的等待时间:\n\n    sudo yum install yum-axelget\n\n安装该插件的同时会安装另一个软件 axel。axel 是一个并行下载工具，在下载 http、ftp 等简单协议的文件时非常好用。\n\n### 第一次全面更新\n\n在进一步操作之前，先把已经安装的软件包都升级到最新版:\n\n    sudo yum update\n\n要更新的软件包有些多，可能需要一段时间。不过有了 yum-axelget 插件，速度已经快了很多啦。\n\n### 重启\n\n第一次全面更新完之后建议重启。\n\n### 删除多余的 kernel\n\n在前面的 `yum update` 执行之后，可能会将 kernel 也一起更新，则在启动 CentOS 时启动项中会有很多项。\n\n确认当前使用的 kernel 版本号:\n\n    $ uname -r\n    3.10.0-123.9.3.el7.x86_64\n\n查找当前系统安装的所有 kernel:\n\n    $ rpm -qa | grep kernel | sort\n    kernel-3.10.0-123.8.1.el7.x86_64\n    kernel-3.10.0-123.9.2.el7.x86_64\n    kernel-3.10.0-123.9.3.el7.x86_64\n    kernel-devel-3.10.0-123.8.1.el7.x86_64\n    kernel-devel-3.10.0-123.9.2.el7.x86_64\n    kernel-devel-3.10.0-123.9.3.el7.x86_64\n    kernel-headers-3.10.0-123.9.3.el7.x86_64\n    kernel-tools-3.10.0-123.9.3.el7.x86_64\n    kernel-tools-libs-3.10.0-123.9.3.el7.x86_64\n\n可以看出有三个版本的 kernel，123.8.1、123.9.2 和 123.9.3。除了最新的 kernel 外，建议多保留一个旧 kernel，以免新 kernel 出现问题时可以通过旧 kernel 进入系统。因而此处删除 123.8.1 版本的 kernel:\n\n    sudo yum remove kernel-3.10.0-123.8.1.el7.x86_64\n    sudo yum remove kernel-devel-3.10.0-123.8.1.el7.x86_64\n\n## 基础开发环境\n\n### GCC 系列\n\n    sudo yum install gcc                     # C 编译器\n    sudo yum install gcc-c++                 # C++ 编译器\n    sudo yum install gcc-gfortran            # Fortran 编译器\n    sudo yum install compat-gcc-44           # 兼容 gcc 4.4\n    sudo yum install compat-gcc-44-c++       # 兼容 gcc-c++ 4.4\n    sudo yum install compat-gcc-44-gfortran  # 兼容 gcc-fortran 4.4\n    sudo yum install compat-libf2c-34        # g77 3.4.x 兼容库\n\n### 软件开发辅助工具\n\n    sudo yum install make\n    sudo yum install gdb     # 代码调试器\n    sudo yum install cmake   # Cmake\n    sudo yum install git     # 版本控制\n\n## 驱动程序\n\n### 显卡驱动\n\nLinux 默认只使用开源的显卡驱动，就目前的情况来看，开源驱动的效果还是不错的，但跟官方的\n闭源驱动相比还是有一定差距。最明显的区别是，在使用 SAC 的 ppk 功能放大波形时，使用开源驱动会\n出现延迟，而使用官方闭源则整个过程非常顺畅。\n\n关于显卡驱动的安装，请参考 [Linux 下安装 nvidia 显卡驱动](/install-nvidia-drivers-under-linux.html)\n一文中的 “从 ELRepo 源中安装驱动” 部分。\n\n**注意**：目前的显卡驱动似乎有问题，安装后终端有时会出现屏幕闪烁、一屏文字上下重复跳动的情况，\n稍微有些影响用 vim 写代码。是否要安装显卡驱动自己决定。\n\n### NTFS 驱动\n\nCentOS 下默认无法挂载 NTFS 格式的硬盘。需安装 nfts-3g 即可实现即插即用:\n\n    sudo yum install ntfs-3g\n\n## 进阶开发环境\n\n### Java 环境\n\nJava 的一大特色在于跨平台，安装了 Java 运行环境，即可运行 Java 程序:\n\n    sudo yum install java                        # java 运行环境\n\n### Clang 系列\n\nClang 可以认为是 GCC 的替代品，可以用于编译 C、C++、Objective-C 和 Objective-C++。其提供了更友好的\n报错信息，在有些方面比 GCC 更友好，同时其提供了一个代码静态分析器，可以用于分析代码中可能出现的 bug 和内存溢出问题。\n\n    sudo yum install clang             # clang 编译器\n    sudo yum install clang-analyzer    # clang 静态分析器\n\n### Intel 系列\n\nIntel 的大部分软件都是非开源且收费的，但同时部分软件也提供了 Linux 下的非商业免费版。\n比如 icc、mkl 数学库以及代码性能分析工具等。\n\nIntel 软件的申请以及安装参考《[Intel 非商业免费开发工具](/intel-non-commercial-software.html)》。\n\n还有一点需要注意的是，Intel 也提供了并行相关的几个命令，比如 mpicc、mpirun。所以 openmpi、mpich\n和 intel 三者，在并行时只能用其中一个。\n\n### 并行计算\n\n并行可以用 openmpi，也可以用 mpich，二者的功能可以认为是完全相同的。由于二者提供了几乎一样的命令，\n所以二者可以同时安装，但是不可以同时处于使用状态。\n\n#### openmpi\n\n安装 openmpi:\n\n    sudo yum install openmpi openmpi-devel\n\n安装后，二进制文件位于 `/usr/lib64/openmpi/bin` 下，动态库文件位于 `/usr/lib64/openmpi/lib`\n下，因而实际使用的话还需要额外的配置，在 `.bashrc` 中加入如下语句:\n\n    export PATH=/usr/lib64/openmpi/bin/:${PATH}\n    module load mpi/openmpi-x86_64\n\nPS：要使用 `module` 命令需要先安装 `environment-modules` 包。\n\n#### mpich\n\n安装 mpich:\n\n    sudo yum install mpich mpich-devel\n\n安装后，二进制文件位于 `/usr/lib64/mpich/bin` 下，动态库文件位于 `/usr/lib64/mpich/lib` 下，\n因而实际使用的话还需要额外的配置，在 `.bashrc` 中加入如下语句:\n\n    export PATH=/usr/lib64/mpich/bin/:${PATH}\n    module load mpi/mpich-x86_64\n\n## 脚本语言环境\n\n### Perl\n\nCentOS 7.0 自带了 Perl 5.16.3（2013 年 03 月 11 日发布），目前的最新版本为 5.20.1（2014 年 09 月 14 日发布）。\n\n#### 系统自带 Perl\n\n系统自带 Perl，就目前来看，版本不算老，基本够用。官方源和 EPEL 源中提供了 1000 多个模块，可以直接用 yum 安装:\n\n    sudo yum install perl-Parallel-ForkManager  # 并行模块\n\n若源中没有已打包好的模块，也可以使用 perl 自带的 cpan 来安装模块。\n\n优先级：yum > cpan。\n\n#### plenv 管理新版本\n\n若需要使用最新版本的 perl，可以使用 [plenv](/perl-plenv.html) 安装新版本的 perl，并使用 plenv 提供的 cpanm 命令安装模块:\n\n    cpanm install Parallel::ForkManager # 并行模块\n\n### Python\n\nCentOS 7.0 自带 Python 2.7.5，目前 Python 2 的最新版本为 2.7.8，Python 3 的最新版本为 3.4.2。\n\n#### 系统自带 Python\n\n系统自带的 Python 2.7.5，基本已经够用，Python 2 常用的模块在官方源或 EPEL 源中也有有编译好的包，\n因而直接通过 yum 安装即可:\n\n    sudo yum install python-matplotlib  # 2D 绘图库\n    sudo yum install PyQt4  # Qt4 的 Python 绑定\n    sudo yum install numpy  # 数组操作库\n    sudo yum install scipy  # 科学计算库\n    sudo yum install python-requests  # 网页请求\n    sudo yum install python-docopt  # 命令行参数分析器\n    sudo yum install gdal-python    # gdal 的 Python 绑定\n\n#### pyenv 管理 Python3\n\nPython2 与 Python3 之间是不完全兼容的，而我以 Python3 为主，所以需要安装一个 Python3。\n\n首先，安装 [pyenv](/python-pyenv.html) 来管理多个 Python 版本，然后利用 pyenv 安装 anaconda3\n（即 Python3.4）。anaconda 自带了众多科学计算所需的包，免去了安装的麻烦，对于其他包，\n则可以利用 Python 自带的 pip 安装:\n\n    pip install requests\n    pip install docopt\n\n## 编程相关软件\n\n### 编辑器\n\n写代码的时候选一个好用的编辑器很重要，用的比较多的编辑器如下：\n\n1.  vim\n2.  emacs\n3.  atom\n4.  sublime text 3\n5.  Visual Studio Code\n\n### IDE\n\n-   Python IDE：[PyCharm Community Edition](https://www.jetbrains.com/pycharm/)\n\n## 日常软件\n\n### Office 套件\n\n#### LibreOffice\n\n大多数 Linux 发行版都自带 LibreOffice:\n\n    sudo yum install libreoffice\n\nLibreOffice 与 Microsoft Office 的兼容性不太好，操作界面与 MS Office 也有较大差异，让人不太习惯。\n\n#### WPS Office\n\n若在 Linux 下对于文档处理有更高一些的要求，可以尝试目前还处于测试版的 WPS Office for Linux。\nWPS Office 的兼容性以及界面都比 LibreOffice 要好很多，值得期待，当然还是不能做到完全兼容 MS\nOffice。\n\n安装过程参考 [CentOS 下安装 WPS Office](/wps-office-for-centos7.html) 一文。\n\n### PS/PDF 阅读器\n\n系统自带的 evince 阅读器，可以打开 PS 和 PDF 文件，基本足够日常的使用了。\n\n#### zathura\n\nzathura 可以查看 PS、PDF、djvu 格式的文件，可以作为 evince 的替代品:\n\n    sudo yum install zathura zathura-plugins-all\n\n#### ghostscript\n\n    sudo yum install ghostscript\n\n#### master-pdf-editor\n\n官方网站: <https://code-industry.net/free-pdf-editor/>\n\n    sudo yum localinstall http://get.code-industry.net/public/master-pdf-editor3-3.2.62-1.x86_64.rpm\n\n### TeX Live 2015\n\n系统是自带了 TeXLive，版本较老，还是安装最新版比较好。\n\n参考 [Linux 下安装 TeXLive](/install-texlive-under-linux.html) 一文。\n\n### Mendeley\n\nMendeley 是一个跨平台的文献管理软件，其内部自带了一个可以添加注释的 PDF 阅读器。\n\n下载 Generic Linux (64 bits)：http://www.mendeley.com/download-mendeley-desktop\n\n安装:\n\n    tar -xvf mendeleydesktop-1.12.3-linux-x86_64.tar.bz2  # 解压\n    sudo mv mendeleydesktop /opt  # 复制到 / opt 下\n    cd /opt/mendeleydesktop/bin   # cd 进去\n    ./install-mendeley-link-handler.sh /opt/mendeleydesktop/bin/mendeleydesktop\n    sudo yum install qtwebkit  # 安装依赖包\n\n注销重新登陆，在 Application->Education 下即可看到 mendeley 的相关项目。不过是\n没有软件的图标的，强迫症不能忍，用下面的命令解决:\n\n    cp /opt/mendeleydesktop/share/icons/hicolor/128x128/apps/mendeleydesktop.png ~/.local/share/icons/\n\n### Google Chrome 浏览器\n\n默认的浏览器是 Firefox，还是更喜欢 Chrome 浏览器。\n\nGoogle 官方源在国内可能无法正常访问，故而添加 Fedora 中文社区提供的镜像源:\n\n    sudo wget http://repo.fdzh.org/chrome/google-chrome-mirrors.repo -P /etc/yum.repos.d/\n\n安装:\n\n    sudo yum install google-chrome-stable\n\n### Opera 浏览器\n\n也可以选择 Opera 浏览器。\n\n下载地址：http://www.opera.com/download/guide/?os=linux\n\n选择 CentOS RPM package 进行下载。下载完成后，执行:\n\n    sudo yum localinstall opera-12.16-1860.x86_64.rpm\n\n想要卸载的话，就执行:\n\n    sudo yum remove opera\n\n### Flash 插件\n\nFlash 插件主要是看在线视频的时候要用。Google 浏览器自带了 Flash 插件，所以这里安装的 flash 插件主要是为了 firefox。\n\n    sudo rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm\n    sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\n    sudo yum install flash-plugin\n\n### 解压软件\n\n解压 7z 或 zip 格式需要 p7zip，由 EPEL 提供:\n\n    sudo yum install p7zip\n\n解压 rar 格式可以使用 [unar](https://unarchiver.c3.cx/commandline)，该软件位于 EPEL 源中：\n\n    sudo yum install unar\n\n### FTP 客户端\n\nFTP 客户端，还是有界面的 filezilla 比较方便些。\n\n    sudo yum install filezilla\n\n### Google Earth\n\n到 https://www.google.com/earth/download/ge/agree.html 下载64位rpm包，执行如下命令安装:\n\n    sudo yum localinstall google-earth-stable_current_x86_64.rpm\n\n## 效率类软件\n\n这一类工具能够在不同方面提高科研的效率，也提高了使用者的体验。\n\n### 终端模拟器\n\nGnome 自带的终端模拟器是 gnome-terminal。经常会需要开十几个终端，切换和管理起来比较麻烦。\n\n#### terminator\n\nterminator 有很多功能，我只用到了终端分割的功能。 `Ctrl+Shift+O` 对终端水平分隔，\n`Ctrl+Shift+E` 对终端垂直分隔， `Alt + 上下左右 ` 可以在各子终端中切换。terminator 由 Nux Dextop 提供:\n\n    sudo yum install terminator\n\n#### guake\n\n有些时候需要临时执行一两个命令，但是又不想额外启动一个终端的情况下，guake 是个不错的选择。\n\n    sudo yum install guake\n\n安装完成后，在 Application->System Tools 里找到 guake Terminal 即可启动。按下 F12\n即可呼出 guake，再次按下 F12 即可隐藏。也可在终端执行 `guake-prefs` 对 gauke 进行配置。\n\n### zsh 与 oh my zsh\n\nLinux 下有很多 shell，比如最常见的 bash，除此之外还有 csh、ksh。zsh 也是一个 shell。\n\nzsh 的特点在于：\n\n-   语法基本完全兼容于 bash，一般用户完全体会不到其区别\n-   zsh 提供命令补全特性，比 bash 的补全要更好用\n-   可配置性强\n\n完全不经配置的 zsh 已经很好用了，一般用户也没必要花时间研究配置。\n[oh my zsh](https://github.com/robbyrussell/oh-my-zsh) 是一群人一起维护的一套 zsh 配置文件。\n直接用这个配置文件，稍稍了解一点会有更好的体验。\n\n安装 zsh:\n\n    sudo yum install zsh\n\n安装 oh my zsh:\n\n    curl -L http://install.ohmyz.sh | sh\n\n上面的命令，做了如下几件事情：\n\n-   下载 `oh my zsh` 到 `~/.oh-my-zsh`\n-   备份已有的 zsh 配置文件 `~/.zshrc` ，并复制新的 `.zshrc` 文件\n-   将当前用户的默认 shell 由 bash 改成 zsh\n\n第三步中，会报错如下： `chsh: \"/usr/bin/zsh\" is not listed in /etc/shells.` ，需要手动修改默认 shell:\n\n    chsh -s /bin/zsh\n\nchsh 命令修改的是 login shell，因而需要退出当前用户并重新登陆，以后用户的默认 shell\n就从 bash 变成了 zsh，所有的配置都不用写到 `.bashrc` 而要写到 `.zshrc` 中。\n\n在 `.zshrc` 中可以选择喜欢的主题，以及适当数量的插件。下面列出我在用的插件:\n\n1.  git\n\n    该插件为 git 的众多常用命令提供了更简单的别名，比如 `git status` 的别名是 `gst`，\n    大大减少了击键数。但该插件中 `git mergetool --no-prompt` 的别名是 `gmt`，\n    与 GMT 软件冲突，需要将该插件的目录 git 复制到 custom/plugins 下，然后删除其中的 gmt 别名；\n\n2.  命令补全插件: pip, pyenv\n3.  sudo：按两下 `ESC` 即可在当前命令前加上 `sudo`\n4.  yum：为常见的 yum 命令提供别名\n\n### autojump\n\n[autojump](https://github.com/joelthelion/autojump) 是一个非常智能的目录快速切换的工具。简单演示如下:\n\n    $ pwd\n    /home/seisman\n    $ cd Desktop\n    $ cd /opt\n    $ cd /usr/local\n\n    # 用 j 命令迅速从 / usr/local 跳转到与 des 匹配的目录，这里只有 Desktop 可以匹配\n    $ j des\n    $ pwd\n    /home/seisman/Desktop\n\n用法差不多就这样，具体看项目主页。\n\n安装:\n\n    sudo yum install autojump\n    sudo yum install autojump-zsh\n\n### 中文输入法\n\n由于使用的是全英文安装，所以默认是没有中文输入法的。\n\n在“Application”->“Settings”->“Region & Language” 中将“Chinese（Intelligent Pinyin）”添加到“Input Sources” 中即可使用中文输入法。默认使用“Shift”键切换中文输入法。\n\n### 等宽字体\n\n编程要用等宽字体，这点是常识了。一款适合编程的等宽字体，至少要满足如下几个要求：\n\n1.  易于区分 “1”、“i” 和“l”\n2.  易于区分 “0”、“o” 和“O”\n3.  易于区分中文下的左引号和右引号\n4.  美观\n\n目前选择的 Source Code Pro。将解压后的字体文件放在 `~/.fonts` 目录下，并修改终端、gedit 以及其他编辑器、IDE 等的默认字体。\n\n## 虚拟机\n\n有时候可能需要在 Windows 下做一些操作，如果机器性能足够好的话，可以安装虚拟机。\n\n### VirtualBox 虚拟机\n\nVirtuabBox 的安装:\n\n    wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\n    sudo mv virtualbox.repo /etc/yum.repos.d/\n    sudo yum install VirtualBox-5.0\n\n需要注意两点：\n\n-   若机器性能不够，虚拟机的使用体验会非常差，所以不建议在老机器上使用；\n-   更新 kernel 之后需要执行 `sudo /sbin/rcvboxdrv setup` ；\n-   在 VirtualBox 安装虚拟系统后，记得使用 “设备”->“安装增强功能”，使用效果会更好；\n\n### gnome-boxes\n\ngnome-boxes 是 GNOME3 开发的一个虚拟机工具，使用体验不如 VirtualBox:\n\n    sudo yum install gnome-boxes\n\n### Wine\n\nWine 是一个可以让 Windows 程序运行在 Linux 下的软件。类似虚拟机，但跟虚拟机又不太一样:\n\n    sudo yum install wine\n\n## 同步网盘\n\n网盘根据功能大概可以分为两类：同步网盘和备份网盘。既然是同步网盘，Linux 下\n的客户端必不可少。就目前已知的情况来看，CentOS7 下能使用的同步网盘只有三个：\nDropbox、MEGA 和坚果云。\n\n我主要用同步网盘将 Linux 机器上的 PDF 文献同步到 iPad 上。\n\n### Dropbox\n\n又是一个被墙的工具，熟练掌握科学上网技巧的人可以使用，一般人还是不要用了。\n\n    wget https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\n    sudo rpm -i nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\n\n### MEGA\n\nMEGA： <https://mega.co.nz/>\n\n免费容量 50G，作为同步盘来说基本是够用了。\n\n    # 下载主程序\n    wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/megasync-CentOS_7.x86_64.rpm\n    # 下载文件管理器扩展（可选）\n    wget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/nautilus-megasync-CentOS_7.x86_64.rpm\n    sudo yum localinstall megasync-CentOS_7.x86_64.rpm\n    sudo yum localinstall nautilus-megasync-CentOS_7.x86_64.rpm\n\n### 坚果云\n\n国内的全平台同步网盘，不限空间，但限制每月上传流量 1G，下载流量 3G。\n\n    # 坚果云依赖于 notify-python\n    sudo yum install notify-python\n    # 下载\n    wget https://jianguoyun.com/static/exe/installer/fedora/nautilus_nutstore_amd64.rpm\n    sudo rpm -i nautilus_nutstore_amd64.rpm\n\n## 工具软件\n\n### 视频下载工具\n\n[you-get](https://github.com/soimort/you-get) 和 [youtube-dl](https://github.com/rg3/youtube-dl)\n是两个用于从视频网站上下载视频文件的工具。其中，后者支持的网站更多，但前者对国内的视频网站支持更好。\n\n    pip install you-get\n    pip install youtube-dl\n    # EPEL 中提供了 youtube-dl 包，因而也可以使用 yum 安装。一般来说，pip 安装的版本更新一些\n\n### PDF 处理工具\n\n[cpdf](http://community.coherentpdf.com/) 是一个跨平台的 PDF 处理工具，可以完成常见的 PDF 合并、\n切割、加密解密、书签、水印等功能。\n\n下载已编译好的 [二进制包](https://github.com/coherentgraphics/cpdf-binaries/archive/master.zip)，\n解压，并将与自己的平台对应的二进制文件复制到 `${HOME}/bin` 目录下即可使用。\n\n### BT 软件\n\ntransmission 是 Linux 下常用的 Torrent 下载软件:\n\n    sudo yum install transmission\n\n在 “Application”->“Internet”-> 中可以启动 transmission。\n\n### uGet\n\n<http://ugetdm.com/>\n\nuGet 是 Linux 下的一个下载工具，支持 HTTP、HTTPS、FTP、Torrent 等，支持多连接，并可以监视剪贴板:\n\n    sudo yum --enablerepo=epel-testing install uget aria2\n\n### 截图软件 shutter\n\nGNOME 自带了截图工具。 `PrtScn` 为截取整个屏幕； `Alt+PrtScn` 为截取当前窗口；\n`Shift+PrtScn` 为自定义截屏区域。\n\n[shutter](http://shutter-project.org/) 是一个功能更强大的截图工具，支持不同的截图方式、\n图片格式，还支持图片的简单编辑与注释:\n\n    sudo yum install shutter\n\n可以通过 [修改快捷键使 shutter 成为默认的截图工具](http://shutter-project.org/faq-help/set-shutter-as-the-default-screenshot-tool/)。\n\n### 其他工具\n\n    sudo yum install nfs-utils     # 挂载 NFS 文件系统所必须\n    sudo yum install xclip         # 终端的文本复制工具\n    sudo yum install ImageMagick   # 其中的 import 和 convert 命令很有用\n    sudo yum install dos2unix unix2dos  # Windows 和 Linux 换行符互相转换\n    sudo yum install meld          # 图形界面下的文件差异比较工具\n\n## 娱乐\n\n### 影音播放器\n\nNux Dextop 提供了 mplayer 和 VLC，可以用于播放常见格式的音频和视频，二者选其一安装即可:\n\n    sudo yum install mplayer\n    sudo yum install vlc\n\n### 游戏\n\n    sudo yum install 2048-cli   # 2048 命令行版\n\n## 参考\n\n1.  [ELRepo 官方网站](http://elrepo.org/tiki/tiki-index.php)\n2.  [ELRepo kmod-nvidia](http://elrepo.org/tiki/kmod-nvidia)\n3.  [CentOS Yum 软件库样例](http://wiki.centos.org/zh/AdditionalResources/Repositories/GoogleYumRepos)\n\n## 修订历史\n\n-   2017-04-15：初稿；","slug":"centos-s","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cj21lz1j80002pgc9f4aaqac0","content":"<p>这篇博文记录了我用 CentOS 7 搭建 <strong>数据科学生产环境</strong> 的过程，供我个人在未来重装系统时参考。对于其他同学，也许有借鉴意义。</p>\n<p>阅读须知：</p>\n<ol>\n<li><strong>不推荐刚接触 Linux 的人使用 CentOS 发行版</strong>；</li>\n<li>本文尽量写的浅显易懂，但要求读者掌握 Linux 基础知识；</li>\n<li>本文所有操作均在 CentOS 7 下完成，其他发行版或多或少与 CentOS 7 不同，因而仅供参考；</li>\n<li>本文所安装的软件纯粹出于个人习惯及喜好，读者应自己判断，按需安装；</li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"安装-CentOS\"><a href=\"#安装-CentOS\" class=\"headerlink\" title=\"安装 CentOS\"></a>安装 CentOS</h2><p>CentOS 7 的安装与其他 Linux 发行版的安装差不多，个别地方稍有不同。</p>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ol>\n<li><p>准备材料</p>\n<ul>\n<li>U 盘：容量 2GB 以上，用于制作 U 盘启动盘，因为在制作启动盘时会格式化 U 盘，所以 U 盘内不要包含重要资料</li>\n<li><a href=\"http://mirrors.ustc.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-LiveGNOME-1511.iso\" target=\"_blank\" rel=\"external\">CentOS 7.2 LiveCD ISO 镜像文件</a></li>\n<li><a href=\"http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/\" target=\"_blank\" rel=\"external\">Universal USB installer</a>：Windows 下的 U 盘启动盘制作工具</li>\n<li>一个已安装 Windows 的电脑：用于制作 U 盘启动盘</li>\n</ul>\n</li>\n<li><p>运行 Universal USB installer 并制作 U 盘启动盘</p>\n</li>\n<li>将 U 盘插入计算机，重启，进入 BIOS 选择从 U 盘启动，即可进入 CentOS 的 LiveCD</li>\n<li>进入 LiveCD 后，点击桌面的 “Install to Hard Drive” 即可安装</li>\n</ol>\n<p>注：Linux 下可以通过 <code>dd</code> 命令制作启动盘，但由于对原理不够了解，偶尔会导致制作失败，<br>或制作成功后 U 盘容量有问题，还是用 Windows 下的 Universal USB installer 比较靠谱。</p>\n<h3 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h3><ol>\n<li><p>选择安装过程中使用的语言，这里应 <strong>使用英语，不要使用汉语</strong>。若安装界面使用汉语，最终安装的系统中会出现两个比较麻烦的问题：</p>\n<ol>\n<li>家目录下的系统文件夹如 Downloads、Desktop 等会以中文表示，这使得在命令行 <code>cd</code> 变得很麻烦；</li>\n<li>终端中某些字符用英文字体，某些字符用中文字体，效果非常差，需要自己修改终端字体方可；</li>\n</ol>\n</li>\n<li><p>选择区域和城市：Asia 和 Shanghai</p>\n</li>\n<li>键盘使用 English(US) 而不是 English(UK)</li>\n<li>Hostname 可以改也可以不改，我用 <code>saturn.geolab</code></li>\n<li>安装的目的地，选择要使用的硬盘，在 “Other Storage Options” 处选择“I will configure partioning”，即手动分区</li>\n</ol>\n<h3 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h3><p>CentOS7 的分区似乎比较特别，自认为经验很丰富的我在第一次安装 CentOS7 时还是在分区上耽误了很多时间。后来找到比较合适的分区方法，如下：</p>\n<ul>\n<li>点击 “Click here to create them automatically”，即让安装程序帮忙分区</li>\n<li>默认的分区方案是使用 LVM，其好处在于 “当机器有多块硬盘时，在使用的时候看上去只有一块”</li>\n<li>默认的文件系统为 XFS 而不是以前常用的 EXT4；</li>\n<li>自动分区完成后，再根据自己的需求，手动修改分区细节<ul>\n<li><code>/boot</code> ：CentOS 自动分配，一定不要乱改；</li>\n<li><code>/</code> ：根目录，合理使用并及时清理的话 15G 就够了，不过建议 30G 以上；</li>\n<li><code>swap</code> ：与物理内存大小一致即可</li>\n<li><code>/opt</code> ：个人习惯是将第三方软件都安装在 <code>/opt</code> 下，所以分了 70G</li>\n<li><code>/home</code> ：余下的全部空间</li>\n</ul>\n</li>\n<li>点击 “Begin to Install” 开始安装</li>\n</ul>\n<h3 id=\"真正的安装\"><a href=\"#真正的安装\" class=\"headerlink\" title=\"真正的安装\"></a>真正的安装</h3><ol>\n<li>设置 root 密码</li>\n<li>创建一般用户</li>\n<li>等待安装完成</li>\n<li>安装完成，重启</li>\n<li>重启后，同意 License 即可</li>\n</ol>\n<h2 id=\"对系统的若干修改\"><a href=\"#对系统的若干修改\" class=\"headerlink\" title=\"对系统的若干修改\"></a>对系统的若干修改</h2><h3 id=\"若干原则\"><a href=\"#若干原则\" class=\"headerlink\" title=\"若干原则\"></a>若干原则</h3><p>为了搭建一个稳定的系统，尽量避免因为各种瞎折腾而导致的系统问题，特订立了一些软件安装的原则。<br>具体参见《<a href=\"/how-to-install-softwares-under-centos-7.html\">CentOS7 下的软件安装方法与策略</a>》。</p>\n<h3 id=\"给一般账号-root-权限\"><a href=\"#给一般账号-root-权限\" class=\"headerlink\" title=\"给一般账号 root 权限\"></a>给一般账号 root 权限</h3><p>默认情况下，一般账号是没有 root 权限的。为什么不直接用 root 账号，而是要给一般账号 root 权限呢？</p>\n<ul>\n<li><strong>日常工作中使用 root 账号，是非常糟糕且危险的习惯！无论是服务器还是个人电脑都是如此。</strong></li>\n<li>安装软件时需要 root 权限，只能 <code>su</code> 切换到 root 账户再安装。对于习惯使用 <code>sudo</code> 的人来说，还是有些麻烦。</li>\n</ul>\n<p>假设账户名为 seisman，要授予他 root 权限，则要修改配置文件 <code>/etc/sudoers</code> :</p>\n<pre><code>$ su\n# echo &apos;seisman ALL=(ALL) ALL&apos;&gt;&gt; /etc/sudoers # 向配置文件中加入语句\n# tail -1 /etc/sudoers  # 检查一下是否正确\nseisman ALL=(ALL) ALL\n</code></pre><p>其中 seisman 为当前用户名。</p>\n<h3 id=\"添加第三方源\"><a href=\"#添加第三方源\" class=\"headerlink\" title=\"添加第三方源\"></a>添加第三方源</h3><p>CentOS 由于很追求稳定性，所以官方源中自带的软件不多，因而需要一些第三方源，比如<br>EPEL、ATrpms、ELRepo、Nux Dextop、RepoForge 等。根据上面提到的软件安装原则，为了尽<br>可能保证系统的稳定性，此处大型第三方源只添加 EPEL 源、Nux Dextop 和 ELRepo 源。</p>\n<h4 id=\"EPEL\"><a href=\"#EPEL\" class=\"headerlink\" title=\"EPEL\"></a>EPEL</h4><p><a href=\"https://fedoraproject.org/wiki/EPEL\" target=\"_blank\" rel=\"external\">EPEL</a> 即 Extra Packages for Enterprise Linux，<br>为 CentOS 提供了额外的 10000 多个软件包，而且在不替换系统组件方面下了很多功夫，因而可以放心使用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo yum install epel-release</div></pre></td></tr></table></figure>\n<p>执行完该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>epel.repo</code> 文件。</p>\n<!-- #### Nux Dextop\n\n[Nux Dextop](http://li.nux.ro/repos.html) 中包含了一些与多媒体相关的软件包，作者尽量\n保证不覆盖 base 源。官方说明中说该源与 EPEL 兼容，实际上个别软件包存在冲突，但基本不会造成影响:\n\n    sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm\n\n完成该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `nux-dextop.repo` 文件。-->\n<h4 id=\"ELRepo\"><a href=\"#ELRepo\" class=\"headerlink\" title=\"ELRepo\"></a>ELRepo</h4><p>ELRepo 包含了一些硬件相关的驱动程序，比如显卡、声卡驱动:</p>\n<pre><code>sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\nsudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n</code></pre><p>完成该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>elrepo.repo</code> 文件。</p>\n<h3 id=\"安装-yum-axelget\"><a href=\"#安装-yum-axelget\" class=\"headerlink\" title=\"安装 yum-axelget\"></a>安装 yum-axelget</h3><p><a href=\"https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/yum-axelget.html\" target=\"_blank\" rel=\"external\">yum-axelget</a> 是 EPEL<br>提供的一个 yum 插件。使用该插件后用 yum 安装软件时可以并行下载，大大提高了软件的下载速度，减少了下载的等待时间:</p>\n<pre><code>sudo yum install yum-axelget\n</code></pre><p>安装该插件的同时会安装另一个软件 axel。axel 是一个并行下载工具，在下载 http、ftp 等简单协议的文件时非常好用。</p>\n<h3 id=\"第一次全面更新\"><a href=\"#第一次全面更新\" class=\"headerlink\" title=\"第一次全面更新\"></a>第一次全面更新</h3><p>在进一步操作之前，先把已经安装的软件包都升级到最新版:</p>\n<pre><code>sudo yum update\n</code></pre><p>要更新的软件包有些多，可能需要一段时间。不过有了 yum-axelget 插件，速度已经快了很多啦。</p>\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><p>第一次全面更新完之后建议重启。</p>\n<h3 id=\"删除多余的-kernel\"><a href=\"#删除多余的-kernel\" class=\"headerlink\" title=\"删除多余的 kernel\"></a>删除多余的 kernel</h3><p>在前面的 <code>yum update</code> 执行之后，可能会将 kernel 也一起更新，则在启动 CentOS 时启动项中会有很多项。</p>\n<p>确认当前使用的 kernel 版本号:</p>\n<pre><code>$ uname -r\n3.10.0-123.9.3.el7.x86_64\n</code></pre><p>查找当前系统安装的所有 kernel:</p>\n<pre><code>$ rpm -qa | grep kernel | sort\nkernel-3.10.0-123.8.1.el7.x86_64\nkernel-3.10.0-123.9.2.el7.x86_64\nkernel-3.10.0-123.9.3.el7.x86_64\nkernel-devel-3.10.0-123.8.1.el7.x86_64\nkernel-devel-3.10.0-123.9.2.el7.x86_64\nkernel-devel-3.10.0-123.9.3.el7.x86_64\nkernel-headers-3.10.0-123.9.3.el7.x86_64\nkernel-tools-3.10.0-123.9.3.el7.x86_64\nkernel-tools-libs-3.10.0-123.9.3.el7.x86_64\n</code></pre><p>可以看出有三个版本的 kernel，123.8.1、123.9.2 和 123.9.3。除了最新的 kernel 外，建议多保留一个旧 kernel，以免新 kernel 出现问题时可以通过旧 kernel 进入系统。因而此处删除 123.8.1 版本的 kernel:</p>\n<pre><code>sudo yum remove kernel-3.10.0-123.8.1.el7.x86_64\nsudo yum remove kernel-devel-3.10.0-123.8.1.el7.x86_64\n</code></pre><h2 id=\"基础开发环境\"><a href=\"#基础开发环境\" class=\"headerlink\" title=\"基础开发环境\"></a>基础开发环境</h2><h3 id=\"GCC-系列\"><a href=\"#GCC-系列\" class=\"headerlink\" title=\"GCC 系列\"></a>GCC 系列</h3><pre><code>sudo yum install gcc                     # C 编译器\nsudo yum install gcc-c++                 # C++ 编译器\nsudo yum install gcc-gfortran            # Fortran 编译器\nsudo yum install compat-gcc-44           # 兼容 gcc 4.4\nsudo yum install compat-gcc-44-c++       # 兼容 gcc-c++ 4.4\nsudo yum install compat-gcc-44-gfortran  # 兼容 gcc-fortran 4.4\nsudo yum install compat-libf2c-34        # g77 3.4.x 兼容库\n</code></pre><h3 id=\"软件开发辅助工具\"><a href=\"#软件开发辅助工具\" class=\"headerlink\" title=\"软件开发辅助工具\"></a>软件开发辅助工具</h3><pre><code>sudo yum install make\nsudo yum install gdb     # 代码调试器\nsudo yum install cmake   # Cmake\nsudo yum install git     # 版本控制\n</code></pre><h2 id=\"驱动程序\"><a href=\"#驱动程序\" class=\"headerlink\" title=\"驱动程序\"></a>驱动程序</h2><h3 id=\"显卡驱动\"><a href=\"#显卡驱动\" class=\"headerlink\" title=\"显卡驱动\"></a>显卡驱动</h3><p>Linux 默认只使用开源的显卡驱动，就目前的情况来看，开源驱动的效果还是不错的，但跟官方的<br>闭源驱动相比还是有一定差距。最明显的区别是，在使用 SAC 的 ppk 功能放大波形时，使用开源驱动会<br>出现延迟，而使用官方闭源则整个过程非常顺畅。</p>\n<p>关于显卡驱动的安装，请参考 <a href=\"/install-nvidia-drivers-under-linux.html\">Linux 下安装 nvidia 显卡驱动</a><br>一文中的 “从 ELRepo 源中安装驱动” 部分。</p>\n<p><strong>注意</strong>：目前的显卡驱动似乎有问题，安装后终端有时会出现屏幕闪烁、一屏文字上下重复跳动的情况，<br>稍微有些影响用 vim 写代码。是否要安装显卡驱动自己决定。</p>\n<h3 id=\"NTFS-驱动\"><a href=\"#NTFS-驱动\" class=\"headerlink\" title=\"NTFS 驱动\"></a>NTFS 驱动</h3><p>CentOS 下默认无法挂载 NTFS 格式的硬盘。需安装 nfts-3g 即可实现即插即用:</p>\n<pre><code>sudo yum install ntfs-3g\n</code></pre><h2 id=\"进阶开发环境\"><a href=\"#进阶开发环境\" class=\"headerlink\" title=\"进阶开发环境\"></a>进阶开发环境</h2><h3 id=\"Java-环境\"><a href=\"#Java-环境\" class=\"headerlink\" title=\"Java 环境\"></a>Java 环境</h3><p>Java 的一大特色在于跨平台，安装了 Java 运行环境，即可运行 Java 程序:</p>\n<pre><code>sudo yum install java                        # java 运行环境\n</code></pre><h3 id=\"Clang-系列\"><a href=\"#Clang-系列\" class=\"headerlink\" title=\"Clang 系列\"></a>Clang 系列</h3><p>Clang 可以认为是 GCC 的替代品，可以用于编译 C、C++、Objective-C 和 Objective-C++。其提供了更友好的<br>报错信息，在有些方面比 GCC 更友好，同时其提供了一个代码静态分析器，可以用于分析代码中可能出现的 bug 和内存溢出问题。</p>\n<pre><code>sudo yum install clang             # clang 编译器\nsudo yum install clang-analyzer    # clang 静态分析器\n</code></pre><h3 id=\"Intel-系列\"><a href=\"#Intel-系列\" class=\"headerlink\" title=\"Intel 系列\"></a>Intel 系列</h3><p>Intel 的大部分软件都是非开源且收费的，但同时部分软件也提供了 Linux 下的非商业免费版。<br>比如 icc、mkl 数学库以及代码性能分析工具等。</p>\n<p>Intel 软件的申请以及安装参考《<a href=\"/intel-non-commercial-software.html\">Intel 非商业免费开发工具</a>》。</p>\n<p>还有一点需要注意的是，Intel 也提供了并行相关的几个命令，比如 mpicc、mpirun。所以 openmpi、mpich<br>和 intel 三者，在并行时只能用其中一个。</p>\n<h3 id=\"并行计算\"><a href=\"#并行计算\" class=\"headerlink\" title=\"并行计算\"></a>并行计算</h3><p>并行可以用 openmpi，也可以用 mpich，二者的功能可以认为是完全相同的。由于二者提供了几乎一样的命令，<br>所以二者可以同时安装，但是不可以同时处于使用状态。</p>\n<h4 id=\"openmpi\"><a href=\"#openmpi\" class=\"headerlink\" title=\"openmpi\"></a>openmpi</h4><p>安装 openmpi:</p>\n<pre><code>sudo yum install openmpi openmpi-devel\n</code></pre><p>安装后，二进制文件位于 <code>/usr/lib64/openmpi/bin</code> 下，动态库文件位于 <code>/usr/lib64/openmpi/lib</code><br>下，因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>\n<pre><code>export PATH=/usr/lib64/openmpi/bin/:${PATH}\nmodule load mpi/openmpi-x86_64\n</code></pre><p>PS：要使用 <code>module</code> 命令需要先安装 <code>environment-modules</code> 包。</p>\n<h4 id=\"mpich\"><a href=\"#mpich\" class=\"headerlink\" title=\"mpich\"></a>mpich</h4><p>安装 mpich:</p>\n<pre><code>sudo yum install mpich mpich-devel\n</code></pre><p>安装后，二进制文件位于 <code>/usr/lib64/mpich/bin</code> 下，动态库文件位于 <code>/usr/lib64/mpich/lib</code> 下，<br>因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>\n<pre><code>export PATH=/usr/lib64/mpich/bin/:${PATH}\nmodule load mpi/mpich-x86_64\n</code></pre><h2 id=\"脚本语言环境\"><a href=\"#脚本语言环境\" class=\"headerlink\" title=\"脚本语言环境\"></a>脚本语言环境</h2><h3 id=\"Perl\"><a href=\"#Perl\" class=\"headerlink\" title=\"Perl\"></a>Perl</h3><p>CentOS 7.0 自带了 Perl 5.16.3（2013 年 03 月 11 日发布），目前的最新版本为 5.20.1（2014 年 09 月 14 日发布）。</p>\n<h4 id=\"系统自带-Perl\"><a href=\"#系统自带-Perl\" class=\"headerlink\" title=\"系统自带 Perl\"></a>系统自带 Perl</h4><p>系统自带 Perl，就目前来看，版本不算老，基本够用。官方源和 EPEL 源中提供了 1000 多个模块，可以直接用 yum 安装:</p>\n<pre><code>sudo yum install perl-Parallel-ForkManager  # 并行模块\n</code></pre><p>若源中没有已打包好的模块，也可以使用 perl 自带的 cpan 来安装模块。</p>\n<p>优先级：yum &gt; cpan。</p>\n<h4 id=\"plenv-管理新版本\"><a href=\"#plenv-管理新版本\" class=\"headerlink\" title=\"plenv 管理新版本\"></a>plenv 管理新版本</h4><p>若需要使用最新版本的 perl，可以使用 <a href=\"/perl-plenv.html\">plenv</a> 安装新版本的 perl，并使用 plenv 提供的 cpanm 命令安装模块:</p>\n<pre><code>cpanm install Parallel::ForkManager # 并行模块\n</code></pre><h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><p>CentOS 7.0 自带 Python 2.7.5，目前 Python 2 的最新版本为 2.7.8，Python 3 的最新版本为 3.4.2。</p>\n<h4 id=\"系统自带-Python\"><a href=\"#系统自带-Python\" class=\"headerlink\" title=\"系统自带 Python\"></a>系统自带 Python</h4><p>系统自带的 Python 2.7.5，基本已经够用，Python 2 常用的模块在官方源或 EPEL 源中也有有编译好的包，<br>因而直接通过 yum 安装即可:</p>\n<pre><code>sudo yum install python-matplotlib  # 2D 绘图库\nsudo yum install PyQt4  # Qt4 的 Python 绑定\nsudo yum install numpy  # 数组操作库\nsudo yum install scipy  # 科学计算库\nsudo yum install python-requests  # 网页请求\nsudo yum install python-docopt  # 命令行参数分析器\nsudo yum install gdal-python    # gdal 的 Python 绑定\n</code></pre><h4 id=\"pyenv-管理-Python3\"><a href=\"#pyenv-管理-Python3\" class=\"headerlink\" title=\"pyenv 管理 Python3\"></a>pyenv 管理 Python3</h4><p>Python2 与 Python3 之间是不完全兼容的，而我以 Python3 为主，所以需要安装一个 Python3。</p>\n<p>首先，安装 <a href=\"/python-pyenv.html\">pyenv</a> 来管理多个 Python 版本，然后利用 pyenv 安装 anaconda3<br>（即 Python3.4）。anaconda 自带了众多科学计算所需的包，免去了安装的麻烦，对于其他包，<br>则可以利用 Python 自带的 pip 安装:</p>\n<pre><code>pip install requests\npip install docopt\n</code></pre><h2 id=\"编程相关软件\"><a href=\"#编程相关软件\" class=\"headerlink\" title=\"编程相关软件\"></a>编程相关软件</h2><h3 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h3><p>写代码的时候选一个好用的编辑器很重要，用的比较多的编辑器如下：</p>\n<ol>\n<li>vim</li>\n<li>emacs</li>\n<li>atom</li>\n<li>sublime text 3</li>\n<li>Visual Studio Code</li>\n</ol>\n<h3 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h3><ul>\n<li>Python IDE：<a href=\"https://www.jetbrains.com/pycharm/\" target=\"_blank\" rel=\"external\">PyCharm Community Edition</a></li>\n</ul>\n<h2 id=\"日常软件\"><a href=\"#日常软件\" class=\"headerlink\" title=\"日常软件\"></a>日常软件</h2><h3 id=\"Office-套件\"><a href=\"#Office-套件\" class=\"headerlink\" title=\"Office 套件\"></a>Office 套件</h3><h4 id=\"LibreOffice\"><a href=\"#LibreOffice\" class=\"headerlink\" title=\"LibreOffice\"></a>LibreOffice</h4><p>大多数 Linux 发行版都自带 LibreOffice:</p>\n<pre><code>sudo yum install libreoffice\n</code></pre><p>LibreOffice 与 Microsoft Office 的兼容性不太好，操作界面与 MS Office 也有较大差异，让人不太习惯。</p>\n<h4 id=\"WPS-Office\"><a href=\"#WPS-Office\" class=\"headerlink\" title=\"WPS Office\"></a>WPS Office</h4><p>若在 Linux 下对于文档处理有更高一些的要求，可以尝试目前还处于测试版的 WPS Office for Linux。<br>WPS Office 的兼容性以及界面都比 LibreOffice 要好很多，值得期待，当然还是不能做到完全兼容 MS<br>Office。</p>\n<p>安装过程参考 <a href=\"/wps-office-for-centos7.html\">CentOS 下安装 WPS Office</a> 一文。</p>\n<h3 id=\"PS-PDF-阅读器\"><a href=\"#PS-PDF-阅读器\" class=\"headerlink\" title=\"PS/PDF 阅读器\"></a>PS/PDF 阅读器</h3><p>系统自带的 evince 阅读器，可以打开 PS 和 PDF 文件，基本足够日常的使用了。</p>\n<h4 id=\"zathura\"><a href=\"#zathura\" class=\"headerlink\" title=\"zathura\"></a>zathura</h4><p>zathura 可以查看 PS、PDF、djvu 格式的文件，可以作为 evince 的替代品:</p>\n<pre><code>sudo yum install zathura zathura-plugins-all\n</code></pre><h4 id=\"ghostscript\"><a href=\"#ghostscript\" class=\"headerlink\" title=\"ghostscript\"></a>ghostscript</h4><pre><code>sudo yum install ghostscript\n</code></pre><h4 id=\"master-pdf-editor\"><a href=\"#master-pdf-editor\" class=\"headerlink\" title=\"master-pdf-editor\"></a>master-pdf-editor</h4><p>官方网站: <a href=\"https://code-industry.net/free-pdf-editor/\" target=\"_blank\" rel=\"external\">https://code-industry.net/free-pdf-editor/</a></p>\n<pre><code>sudo yum localinstall http://get.code-industry.net/public/master-pdf-editor3-3.2.62-1.x86_64.rpm\n</code></pre><h3 id=\"TeX-Live-2015\"><a href=\"#TeX-Live-2015\" class=\"headerlink\" title=\"TeX Live 2015\"></a>TeX Live 2015</h3><p>系统是自带了 TeXLive，版本较老，还是安装最新版比较好。</p>\n<p>参考 <a href=\"/install-texlive-under-linux.html\">Linux 下安装 TeXLive</a> 一文。</p>\n<h3 id=\"Mendeley\"><a href=\"#Mendeley\" class=\"headerlink\" title=\"Mendeley\"></a>Mendeley</h3><p>Mendeley 是一个跨平台的文献管理软件，其内部自带了一个可以添加注释的 PDF 阅读器。</p>\n<p>下载 Generic Linux (64 bits)：<a href=\"http://www.mendeley.com/download-mendeley-desktop\" target=\"_blank\" rel=\"external\">http://www.mendeley.com/download-mendeley-desktop</a></p>\n<p>安装:</p>\n<pre><code>tar -xvf mendeleydesktop-1.12.3-linux-x86_64.tar.bz2  # 解压\nsudo mv mendeleydesktop /opt  # 复制到 / opt 下\ncd /opt/mendeleydesktop/bin   # cd 进去\n./install-mendeley-link-handler.sh /opt/mendeleydesktop/bin/mendeleydesktop\nsudo yum install qtwebkit  # 安装依赖包\n</code></pre><p>注销重新登陆，在 Application-&gt;Education 下即可看到 mendeley 的相关项目。不过是<br>没有软件的图标的，强迫症不能忍，用下面的命令解决:</p>\n<pre><code>cp /opt/mendeleydesktop/share/icons/hicolor/128x128/apps/mendeleydesktop.png ~/.local/share/icons/\n</code></pre><h3 id=\"Google-Chrome-浏览器\"><a href=\"#Google-Chrome-浏览器\" class=\"headerlink\" title=\"Google Chrome 浏览器\"></a>Google Chrome 浏览器</h3><p>默认的浏览器是 Firefox，还是更喜欢 Chrome 浏览器。</p>\n<p>Google 官方源在国内可能无法正常访问，故而添加 Fedora 中文社区提供的镜像源:</p>\n<pre><code>sudo wget http://repo.fdzh.org/chrome/google-chrome-mirrors.repo -P /etc/yum.repos.d/\n</code></pre><p>安装:</p>\n<pre><code>sudo yum install google-chrome-stable\n</code></pre><h3 id=\"Opera-浏览器\"><a href=\"#Opera-浏览器\" class=\"headerlink\" title=\"Opera 浏览器\"></a>Opera 浏览器</h3><p>也可以选择 Opera 浏览器。</p>\n<p>下载地址：<a href=\"http://www.opera.com/download/guide/?os=linux\" target=\"_blank\" rel=\"external\">http://www.opera.com/download/guide/?os=linux</a></p>\n<p>选择 CentOS RPM package 进行下载。下载完成后，执行:</p>\n<pre><code>sudo yum localinstall opera-12.16-1860.x86_64.rpm\n</code></pre><p>想要卸载的话，就执行:</p>\n<pre><code>sudo yum remove opera\n</code></pre><h3 id=\"Flash-插件\"><a href=\"#Flash-插件\" class=\"headerlink\" title=\"Flash 插件\"></a>Flash 插件</h3><p>Flash 插件主要是看在线视频的时候要用。Google 浏览器自带了 Flash 插件，所以这里安装的 flash 插件主要是为了 firefox。</p>\n<pre><code>sudo rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm\nsudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\nsudo yum install flash-plugin\n</code></pre><h3 id=\"解压软件\"><a href=\"#解压软件\" class=\"headerlink\" title=\"解压软件\"></a>解压软件</h3><p>解压 7z 或 zip 格式需要 p7zip，由 EPEL 提供:</p>\n<pre><code>sudo yum install p7zip\n</code></pre><p>解压 rar 格式可以使用 <a href=\"https://unarchiver.c3.cx/commandline\" target=\"_blank\" rel=\"external\">unar</a>，该软件位于 EPEL 源中：</p>\n<pre><code>sudo yum install unar\n</code></pre><h3 id=\"FTP-客户端\"><a href=\"#FTP-客户端\" class=\"headerlink\" title=\"FTP 客户端\"></a>FTP 客户端</h3><p>FTP 客户端，还是有界面的 filezilla 比较方便些。</p>\n<pre><code>sudo yum install filezilla\n</code></pre><h3 id=\"Google-Earth\"><a href=\"#Google-Earth\" class=\"headerlink\" title=\"Google Earth\"></a>Google Earth</h3><p>到 <a href=\"https://www.google.com/earth/download/ge/agree.html\" target=\"_blank\" rel=\"external\">https://www.google.com/earth/download/ge/agree.html</a> 下载64位rpm包，执行如下命令安装:</p>\n<pre><code>sudo yum localinstall google-earth-stable_current_x86_64.rpm\n</code></pre><h2 id=\"效率类软件\"><a href=\"#效率类软件\" class=\"headerlink\" title=\"效率类软件\"></a>效率类软件</h2><p>这一类工具能够在不同方面提高科研的效率，也提高了使用者的体验。</p>\n<h3 id=\"终端模拟器\"><a href=\"#终端模拟器\" class=\"headerlink\" title=\"终端模拟器\"></a>终端模拟器</h3><p>Gnome 自带的终端模拟器是 gnome-terminal。经常会需要开十几个终端，切换和管理起来比较麻烦。</p>\n<h4 id=\"terminator\"><a href=\"#terminator\" class=\"headerlink\" title=\"terminator\"></a>terminator</h4><p>terminator 有很多功能，我只用到了终端分割的功能。 <code>Ctrl+Shift+O</code> 对终端水平分隔，<br><code>Ctrl+Shift+E</code> 对终端垂直分隔， <code>Alt + 上下左右</code> 可以在各子终端中切换。terminator 由 Nux Dextop 提供:</p>\n<pre><code>sudo yum install terminator\n</code></pre><h4 id=\"guake\"><a href=\"#guake\" class=\"headerlink\" title=\"guake\"></a>guake</h4><p>有些时候需要临时执行一两个命令，但是又不想额外启动一个终端的情况下，guake 是个不错的选择。</p>\n<pre><code>sudo yum install guake\n</code></pre><p>安装完成后，在 Application-&gt;System Tools 里找到 guake Terminal 即可启动。按下 F12<br>即可呼出 guake，再次按下 F12 即可隐藏。也可在终端执行 <code>guake-prefs</code> 对 gauke 进行配置。</p>\n<h3 id=\"zsh-与-oh-my-zsh\"><a href=\"#zsh-与-oh-my-zsh\" class=\"headerlink\" title=\"zsh 与 oh my zsh\"></a>zsh 与 oh my zsh</h3><p>Linux 下有很多 shell，比如最常见的 bash，除此之外还有 csh、ksh。zsh 也是一个 shell。</p>\n<p>zsh 的特点在于：</p>\n<ul>\n<li>语法基本完全兼容于 bash，一般用户完全体会不到其区别</li>\n<li>zsh 提供命令补全特性，比 bash 的补全要更好用</li>\n<li>可配置性强</li>\n</ul>\n<p>完全不经配置的 zsh 已经很好用了，一般用户也没必要花时间研究配置。<br><a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"external\">oh my zsh</a> 是一群人一起维护的一套 zsh 配置文件。<br>直接用这个配置文件，稍稍了解一点会有更好的体验。</p>\n<p>安装 zsh:</p>\n<pre><code>sudo yum install zsh\n</code></pre><p>安装 oh my zsh:</p>\n<pre><code>curl -L http://install.ohmyz.sh | sh\n</code></pre><p>上面的命令，做了如下几件事情：</p>\n<ul>\n<li>下载 <code>oh my zsh</code> 到 <code>~/.oh-my-zsh</code></li>\n<li>备份已有的 zsh 配置文件 <code>~/.zshrc</code> ，并复制新的 <code>.zshrc</code> 文件</li>\n<li>将当前用户的默认 shell 由 bash 改成 zsh</li>\n</ul>\n<p>第三步中，会报错如下： <code>chsh: &quot;/usr/bin/zsh&quot; is not listed in /etc/shells.</code> ，需要手动修改默认 shell:</p>\n<pre><code>chsh -s /bin/zsh\n</code></pre><p>chsh 命令修改的是 login shell，因而需要退出当前用户并重新登陆，以后用户的默认 shell<br>就从 bash 变成了 zsh，所有的配置都不用写到 <code>.bashrc</code> 而要写到 <code>.zshrc</code> 中。</p>\n<p>在 <code>.zshrc</code> 中可以选择喜欢的主题，以及适当数量的插件。下面列出我在用的插件:</p>\n<ol>\n<li><p>git</p>\n<p>该插件为 git 的众多常用命令提供了更简单的别名，比如 <code>git status</code> 的别名是 <code>gst</code>，<br>大大减少了击键数。但该插件中 <code>git mergetool --no-prompt</code> 的别名是 <code>gmt</code>，<br>与 GMT 软件冲突，需要将该插件的目录 git 复制到 custom/plugins 下，然后删除其中的 gmt 别名；</p>\n</li>\n<li><p>命令补全插件: pip, pyenv</p>\n</li>\n<li>sudo：按两下 <code>ESC</code> 即可在当前命令前加上 <code>sudo</code></li>\n<li>yum：为常见的 yum 命令提供别名</li>\n</ol>\n<h3 id=\"autojump\"><a href=\"#autojump\" class=\"headerlink\" title=\"autojump\"></a>autojump</h3><p><a href=\"https://github.com/joelthelion/autojump\" target=\"_blank\" rel=\"external\">autojump</a> 是一个非常智能的目录快速切换的工具。简单演示如下:</p>\n<pre><code>$ pwd\n/home/seisman\n$ cd Desktop\n$ cd /opt\n$ cd /usr/local\n\n# 用 j 命令迅速从 / usr/local 跳转到与 des 匹配的目录，这里只有 Desktop 可以匹配\n$ j des\n$ pwd\n/home/seisman/Desktop\n</code></pre><p>用法差不多就这样，具体看项目主页。</p>\n<p>安装:</p>\n<pre><code>sudo yum install autojump\nsudo yum install autojump-zsh\n</code></pre><h3 id=\"中文输入法\"><a href=\"#中文输入法\" class=\"headerlink\" title=\"中文输入法\"></a>中文输入法</h3><p>由于使用的是全英文安装，所以默认是没有中文输入法的。</p>\n<p>在“Application”-&gt;“Settings”-&gt;“Region &amp; Language” 中将“Chinese（Intelligent Pinyin）”添加到“Input Sources” 中即可使用中文输入法。默认使用“Shift”键切换中文输入法。</p>\n<h3 id=\"等宽字体\"><a href=\"#等宽字体\" class=\"headerlink\" title=\"等宽字体\"></a>等宽字体</h3><p>编程要用等宽字体，这点是常识了。一款适合编程的等宽字体，至少要满足如下几个要求：</p>\n<ol>\n<li>易于区分 “1”、“i” 和“l”</li>\n<li>易于区分 “0”、“o” 和“O”</li>\n<li>易于区分中文下的左引号和右引号</li>\n<li>美观</li>\n</ol>\n<p>目前选择的 Source Code Pro。将解压后的字体文件放在 <code>~/.fonts</code> 目录下，并修改终端、gedit 以及其他编辑器、IDE 等的默认字体。</p>\n<h2 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a>虚拟机</h2><p>有时候可能需要在 Windows 下做一些操作，如果机器性能足够好的话，可以安装虚拟机。</p>\n<h3 id=\"VirtualBox-虚拟机\"><a href=\"#VirtualBox-虚拟机\" class=\"headerlink\" title=\"VirtualBox 虚拟机\"></a>VirtualBox 虚拟机</h3><p>VirtuabBox 的安装:</p>\n<pre><code>wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\nsudo mv virtualbox.repo /etc/yum.repos.d/\nsudo yum install VirtualBox-5.0\n</code></pre><p>需要注意两点：</p>\n<ul>\n<li>若机器性能不够，虚拟机的使用体验会非常差，所以不建议在老机器上使用；</li>\n<li>更新 kernel 之后需要执行 <code>sudo /sbin/rcvboxdrv setup</code> ；</li>\n<li>在 VirtualBox 安装虚拟系统后，记得使用 “设备”-&gt;“安装增强功能”，使用效果会更好；</li>\n</ul>\n<h3 id=\"gnome-boxes\"><a href=\"#gnome-boxes\" class=\"headerlink\" title=\"gnome-boxes\"></a>gnome-boxes</h3><p>gnome-boxes 是 GNOME3 开发的一个虚拟机工具，使用体验不如 VirtualBox:</p>\n<pre><code>sudo yum install gnome-boxes\n</code></pre><h3 id=\"Wine\"><a href=\"#Wine\" class=\"headerlink\" title=\"Wine\"></a>Wine</h3><p>Wine 是一个可以让 Windows 程序运行在 Linux 下的软件。类似虚拟机，但跟虚拟机又不太一样:</p>\n<pre><code>sudo yum install wine\n</code></pre><h2 id=\"同步网盘\"><a href=\"#同步网盘\" class=\"headerlink\" title=\"同步网盘\"></a>同步网盘</h2><p>网盘根据功能大概可以分为两类：同步网盘和备份网盘。既然是同步网盘，Linux 下<br>的客户端必不可少。就目前已知的情况来看，CentOS7 下能使用的同步网盘只有三个：<br>Dropbox、MEGA 和坚果云。</p>\n<p>我主要用同步网盘将 Linux 机器上的 PDF 文献同步到 iPad 上。</p>\n<h3 id=\"Dropbox\"><a href=\"#Dropbox\" class=\"headerlink\" title=\"Dropbox\"></a>Dropbox</h3><p>又是一个被墙的工具，熟练掌握科学上网技巧的人可以使用，一般人还是不要用了。</p>\n<pre><code>wget https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\nsudo rpm -i nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\n</code></pre><h3 id=\"MEGA\"><a href=\"#MEGA\" class=\"headerlink\" title=\"MEGA\"></a>MEGA</h3><p>MEGA： <a href=\"https://mega.co.nz/\" target=\"_blank\" rel=\"external\">https://mega.co.nz/</a></p>\n<p>免费容量 50G，作为同步盘来说基本是够用了。</p>\n<pre><code># 下载主程序\nwget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/megasync-CentOS_7.x86_64.rpm\n# 下载文件管理器扩展（可选）\nwget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/nautilus-megasync-CentOS_7.x86_64.rpm\nsudo yum localinstall megasync-CentOS_7.x86_64.rpm\nsudo yum localinstall nautilus-megasync-CentOS_7.x86_64.rpm\n</code></pre><h3 id=\"坚果云\"><a href=\"#坚果云\" class=\"headerlink\" title=\"坚果云\"></a>坚果云</h3><p>国内的全平台同步网盘，不限空间，但限制每月上传流量 1G，下载流量 3G。</p>\n<pre><code># 坚果云依赖于 notify-python\nsudo yum install notify-python\n# 下载\nwget https://jianguoyun.com/static/exe/installer/fedora/nautilus_nutstore_amd64.rpm\nsudo rpm -i nautilus_nutstore_amd64.rpm\n</code></pre><h2 id=\"工具软件\"><a href=\"#工具软件\" class=\"headerlink\" title=\"工具软件\"></a>工具软件</h2><h3 id=\"视频下载工具\"><a href=\"#视频下载工具\" class=\"headerlink\" title=\"视频下载工具\"></a>视频下载工具</h3><p><a href=\"https://github.com/soimort/you-get\" target=\"_blank\" rel=\"external\">you-get</a> 和 <a href=\"https://github.com/rg3/youtube-dl\" target=\"_blank\" rel=\"external\">youtube-dl</a><br>是两个用于从视频网站上下载视频文件的工具。其中，后者支持的网站更多，但前者对国内的视频网站支持更好。</p>\n<pre><code>pip install you-get\npip install youtube-dl\n# EPEL 中提供了 youtube-dl 包，因而也可以使用 yum 安装。一般来说，pip 安装的版本更新一些\n</code></pre><h3 id=\"PDF-处理工具\"><a href=\"#PDF-处理工具\" class=\"headerlink\" title=\"PDF 处理工具\"></a>PDF 处理工具</h3><p><a href=\"http://community.coherentpdf.com/\" target=\"_blank\" rel=\"external\">cpdf</a> 是一个跨平台的 PDF 处理工具，可以完成常见的 PDF 合并、<br>切割、加密解密、书签、水印等功能。</p>\n<p>下载已编译好的 <a href=\"https://github.com/coherentgraphics/cpdf-binaries/archive/master.zip\" target=\"_blank\" rel=\"external\">二进制包</a>，<br>解压，并将与自己的平台对应的二进制文件复制到 <code>${HOME}/bin</code> 目录下即可使用。</p>\n<h3 id=\"BT-软件\"><a href=\"#BT-软件\" class=\"headerlink\" title=\"BT 软件\"></a>BT 软件</h3><p>transmission 是 Linux 下常用的 Torrent 下载软件:</p>\n<pre><code>sudo yum install transmission\n</code></pre><p>在 “Application”-&gt;“Internet”-&gt; 中可以启动 transmission。</p>\n<h3 id=\"uGet\"><a href=\"#uGet\" class=\"headerlink\" title=\"uGet\"></a>uGet</h3><p><a href=\"http://ugetdm.com/\" target=\"_blank\" rel=\"external\">http://ugetdm.com/</a></p>\n<p>uGet 是 Linux 下的一个下载工具，支持 HTTP、HTTPS、FTP、Torrent 等，支持多连接，并可以监视剪贴板:</p>\n<pre><code>sudo yum --enablerepo=epel-testing install uget aria2\n</code></pre><h3 id=\"截图软件-shutter\"><a href=\"#截图软件-shutter\" class=\"headerlink\" title=\"截图软件 shutter\"></a>截图软件 shutter</h3><p>GNOME 自带了截图工具。 <code>PrtScn</code> 为截取整个屏幕； <code>Alt+PrtScn</code> 为截取当前窗口；<br><code>Shift+PrtScn</code> 为自定义截屏区域。</p>\n<p><a href=\"http://shutter-project.org/\" target=\"_blank\" rel=\"external\">shutter</a> 是一个功能更强大的截图工具，支持不同的截图方式、<br>图片格式，还支持图片的简单编辑与注释:</p>\n<pre><code>sudo yum install shutter\n</code></pre><p>可以通过 <a href=\"http://shutter-project.org/faq-help/set-shutter-as-the-default-screenshot-tool/\" target=\"_blank\" rel=\"external\">修改快捷键使 shutter 成为默认的截图工具</a>。</p>\n<h3 id=\"其他工具\"><a href=\"#其他工具\" class=\"headerlink\" title=\"其他工具\"></a>其他工具</h3><pre><code>sudo yum install nfs-utils     # 挂载 NFS 文件系统所必须\nsudo yum install xclip         # 终端的文本复制工具\nsudo yum install ImageMagick   # 其中的 import 和 convert 命令很有用\nsudo yum install dos2unix unix2dos  # Windows 和 Linux 换行符互相转换\nsudo yum install meld          # 图形界面下的文件差异比较工具\n</code></pre><h2 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h2><h3 id=\"影音播放器\"><a href=\"#影音播放器\" class=\"headerlink\" title=\"影音播放器\"></a>影音播放器</h3><p>Nux Dextop 提供了 mplayer 和 VLC，可以用于播放常见格式的音频和视频，二者选其一安装即可:</p>\n<pre><code>sudo yum install mplayer\nsudo yum install vlc\n</code></pre><h3 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h3><pre><code>sudo yum install 2048-cli   # 2048 命令行版\n</code></pre><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"http://elrepo.org/tiki/tiki-index.php\" target=\"_blank\" rel=\"external\">ELRepo 官方网站</a></li>\n<li><a href=\"http://elrepo.org/tiki/kmod-nvidia\" target=\"_blank\" rel=\"external\">ELRepo kmod-nvidia</a></li>\n<li><a href=\"http://wiki.centos.org/zh/AdditionalResources/Repositories/GoogleYumRepos\" target=\"_blank\" rel=\"external\">CentOS Yum 软件库样例</a></li>\n</ol>\n<h2 id=\"修订历史\"><a href=\"#修订历史\" class=\"headerlink\" title=\"修订历史\"></a>修订历史</h2><ul>\n<li>2017-04-15：初稿；</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>这篇博文记录了我用 CentOS 7 搭建 <strong>数据科学生产环境</strong> 的过程，供我个人在未来重装系统时参考。对于其他同学，也许有借鉴意义。</p>\n<p>阅读须知：</p>\n<ol>\n<li><strong>不推荐刚接触 Linux 的人使用 CentOS 发行版</strong>；</li>\n<li>本文尽量写的浅显易懂，但要求读者掌握 Linux 基础知识；</li>\n<li>本文所有操作均在 CentOS 7 下完成，其他发行版或多或少与 CentOS 7 不同，因而仅供参考；</li>\n<li>本文所安装的软件纯粹出于个人习惯及喜好，读者应自己判断，按需安装；</li>\n</ol>","more":"<h2 id=\"安装-CentOS\"><a href=\"#安装-CentOS\" class=\"headerlink\" title=\"安装 CentOS\"></a>安装 CentOS</h2><p>CentOS 7 的安装与其他 Linux 发行版的安装差不多，个别地方稍有不同。</p>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ol>\n<li><p>准备材料</p>\n<ul>\n<li>U 盘：容量 2GB 以上，用于制作 U 盘启动盘，因为在制作启动盘时会格式化 U 盘，所以 U 盘内不要包含重要资料</li>\n<li><a href=\"http://mirrors.ustc.edu.cn/centos/7/isos/x86_64/CentOS-7-x86_64-LiveGNOME-1511.iso\">CentOS 7.2 LiveCD ISO 镜像文件</a></li>\n<li><a href=\"http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/\">Universal USB installer</a>：Windows 下的 U 盘启动盘制作工具</li>\n<li>一个已安装 Windows 的电脑：用于制作 U 盘启动盘</li>\n</ul>\n</li>\n<li><p>运行 Universal USB installer 并制作 U 盘启动盘</p>\n</li>\n<li>将 U 盘插入计算机，重启，进入 BIOS 选择从 U 盘启动，即可进入 CentOS 的 LiveCD</li>\n<li>进入 LiveCD 后，点击桌面的 “Install to Hard Drive” 即可安装</li>\n</ol>\n<p>注：Linux 下可以通过 <code>dd</code> 命令制作启动盘，但由于对原理不够了解，偶尔会导致制作失败，<br>或制作成功后 U 盘容量有问题，还是用 Windows 下的 Universal USB installer 比较靠谱。</p>\n<h3 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h3><ol>\n<li><p>选择安装过程中使用的语言，这里应 <strong>使用英语，不要使用汉语</strong>。若安装界面使用汉语，最终安装的系统中会出现两个比较麻烦的问题：</p>\n<ol>\n<li>家目录下的系统文件夹如 Downloads、Desktop 等会以中文表示，这使得在命令行 <code>cd</code> 变得很麻烦；</li>\n<li>终端中某些字符用英文字体，某些字符用中文字体，效果非常差，需要自己修改终端字体方可；</li>\n</ol>\n</li>\n<li><p>选择区域和城市：Asia 和 Shanghai</p>\n</li>\n<li>键盘使用 English(US) 而不是 English(UK)</li>\n<li>Hostname 可以改也可以不改，我用 <code>saturn.geolab</code></li>\n<li>安装的目的地，选择要使用的硬盘，在 “Other Storage Options” 处选择“I will configure partioning”，即手动分区</li>\n</ol>\n<h3 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h3><p>CentOS7 的分区似乎比较特别，自认为经验很丰富的我在第一次安装 CentOS7 时还是在分区上耽误了很多时间。后来找到比较合适的分区方法，如下：</p>\n<ul>\n<li>点击 “Click here to create them automatically”，即让安装程序帮忙分区</li>\n<li>默认的分区方案是使用 LVM，其好处在于 “当机器有多块硬盘时，在使用的时候看上去只有一块”</li>\n<li>默认的文件系统为 XFS 而不是以前常用的 EXT4；</li>\n<li>自动分区完成后，再根据自己的需求，手动修改分区细节<ul>\n<li><code>/boot</code> ：CentOS 自动分配，一定不要乱改；</li>\n<li><code>/</code> ：根目录，合理使用并及时清理的话 15G 就够了，不过建议 30G 以上；</li>\n<li><code>swap</code> ：与物理内存大小一致即可</li>\n<li><code>/opt</code> ：个人习惯是将第三方软件都安装在 <code>/opt</code> 下，所以分了 70G</li>\n<li><code>/home</code> ：余下的全部空间</li>\n</ul>\n</li>\n<li>点击 “Begin to Install” 开始安装</li>\n</ul>\n<h3 id=\"真正的安装\"><a href=\"#真正的安装\" class=\"headerlink\" title=\"真正的安装\"></a>真正的安装</h3><ol>\n<li>设置 root 密码</li>\n<li>创建一般用户</li>\n<li>等待安装完成</li>\n<li>安装完成，重启</li>\n<li>重启后，同意 License 即可</li>\n</ol>\n<h2 id=\"对系统的若干修改\"><a href=\"#对系统的若干修改\" class=\"headerlink\" title=\"对系统的若干修改\"></a>对系统的若干修改</h2><h3 id=\"若干原则\"><a href=\"#若干原则\" class=\"headerlink\" title=\"若干原则\"></a>若干原则</h3><p>为了搭建一个稳定的系统，尽量避免因为各种瞎折腾而导致的系统问题，特订立了一些软件安装的原则。<br>具体参见《<a href=\"/how-to-install-softwares-under-centos-7.html\">CentOS7 下的软件安装方法与策略</a>》。</p>\n<h3 id=\"给一般账号-root-权限\"><a href=\"#给一般账号-root-权限\" class=\"headerlink\" title=\"给一般账号 root 权限\"></a>给一般账号 root 权限</h3><p>默认情况下，一般账号是没有 root 权限的。为什么不直接用 root 账号，而是要给一般账号 root 权限呢？</p>\n<ul>\n<li><strong>日常工作中使用 root 账号，是非常糟糕且危险的习惯！无论是服务器还是个人电脑都是如此。</strong></li>\n<li>安装软件时需要 root 权限，只能 <code>su</code> 切换到 root 账户再安装。对于习惯使用 <code>sudo</code> 的人来说，还是有些麻烦。</li>\n</ul>\n<p>假设账户名为 seisman，要授予他 root 权限，则要修改配置文件 <code>/etc/sudoers</code> :</p>\n<pre><code>$ su\n# echo &apos;seisman ALL=(ALL) ALL&apos;&gt;&gt; /etc/sudoers # 向配置文件中加入语句\n# tail -1 /etc/sudoers  # 检查一下是否正确\nseisman ALL=(ALL) ALL\n</code></pre><p>其中 seisman 为当前用户名。</p>\n<h3 id=\"添加第三方源\"><a href=\"#添加第三方源\" class=\"headerlink\" title=\"添加第三方源\"></a>添加第三方源</h3><p>CentOS 由于很追求稳定性，所以官方源中自带的软件不多，因而需要一些第三方源，比如<br>EPEL、ATrpms、ELRepo、Nux Dextop、RepoForge 等。根据上面提到的软件安装原则，为了尽<br>可能保证系统的稳定性，此处大型第三方源只添加 EPEL 源、Nux Dextop 和 ELRepo 源。</p>\n<h4 id=\"EPEL\"><a href=\"#EPEL\" class=\"headerlink\" title=\"EPEL\"></a>EPEL</h4><p><a href=\"https://fedoraproject.org/wiki/EPEL\">EPEL</a> 即 Extra Packages for Enterprise Linux，<br>为 CentOS 提供了额外的 10000 多个软件包，而且在不替换系统组件方面下了很多功夫，因而可以放心使用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo yum install epel-release</div></pre></td></tr></table></figure>\n<p>执行完该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>epel.repo</code> 文件。</p>\n<!-- #### Nux Dextop\n\n[Nux Dextop](http://li.nux.ro/repos.html) 中包含了一些与多媒体相关的软件包，作者尽量\n保证不覆盖 base 源。官方说明中说该源与 EPEL 兼容，实际上个别软件包存在冲突，但基本不会造成影响:\n\n    sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm\n\n完成该命令后，在 `/etc/yum.repos.d` 目录下会多一个 `nux-dextop.repo` 文件。-->\n<h4 id=\"ELRepo\"><a href=\"#ELRepo\" class=\"headerlink\" title=\"ELRepo\"></a>ELRepo</h4><p>ELRepo 包含了一些硬件相关的驱动程序，比如显卡、声卡驱动:</p>\n<pre><code>sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\nsudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n</code></pre><p>完成该命令后，在 <code>/etc/yum.repos.d</code> 目录下会多一个 <code>elrepo.repo</code> 文件。</p>\n<h3 id=\"安装-yum-axelget\"><a href=\"#安装-yum-axelget\" class=\"headerlink\" title=\"安装 yum-axelget\"></a>安装 yum-axelget</h3><p><a href=\"https://dl.fedoraproject.org/pub/epel/7/x86_64/repoview/yum-axelget.html\">yum-axelget</a> 是 EPEL<br>提供的一个 yum 插件。使用该插件后用 yum 安装软件时可以并行下载，大大提高了软件的下载速度，减少了下载的等待时间:</p>\n<pre><code>sudo yum install yum-axelget\n</code></pre><p>安装该插件的同时会安装另一个软件 axel。axel 是一个并行下载工具，在下载 http、ftp 等简单协议的文件时非常好用。</p>\n<h3 id=\"第一次全面更新\"><a href=\"#第一次全面更新\" class=\"headerlink\" title=\"第一次全面更新\"></a>第一次全面更新</h3><p>在进一步操作之前，先把已经安装的软件包都升级到最新版:</p>\n<pre><code>sudo yum update\n</code></pre><p>要更新的软件包有些多，可能需要一段时间。不过有了 yum-axelget 插件，速度已经快了很多啦。</p>\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><p>第一次全面更新完之后建议重启。</p>\n<h3 id=\"删除多余的-kernel\"><a href=\"#删除多余的-kernel\" class=\"headerlink\" title=\"删除多余的 kernel\"></a>删除多余的 kernel</h3><p>在前面的 <code>yum update</code> 执行之后，可能会将 kernel 也一起更新，则在启动 CentOS 时启动项中会有很多项。</p>\n<p>确认当前使用的 kernel 版本号:</p>\n<pre><code>$ uname -r\n3.10.0-123.9.3.el7.x86_64\n</code></pre><p>查找当前系统安装的所有 kernel:</p>\n<pre><code>$ rpm -qa | grep kernel | sort\nkernel-3.10.0-123.8.1.el7.x86_64\nkernel-3.10.0-123.9.2.el7.x86_64\nkernel-3.10.0-123.9.3.el7.x86_64\nkernel-devel-3.10.0-123.8.1.el7.x86_64\nkernel-devel-3.10.0-123.9.2.el7.x86_64\nkernel-devel-3.10.0-123.9.3.el7.x86_64\nkernel-headers-3.10.0-123.9.3.el7.x86_64\nkernel-tools-3.10.0-123.9.3.el7.x86_64\nkernel-tools-libs-3.10.0-123.9.3.el7.x86_64\n</code></pre><p>可以看出有三个版本的 kernel，123.8.1、123.9.2 和 123.9.3。除了最新的 kernel 外，建议多保留一个旧 kernel，以免新 kernel 出现问题时可以通过旧 kernel 进入系统。因而此处删除 123.8.1 版本的 kernel:</p>\n<pre><code>sudo yum remove kernel-3.10.0-123.8.1.el7.x86_64\nsudo yum remove kernel-devel-3.10.0-123.8.1.el7.x86_64\n</code></pre><h2 id=\"基础开发环境\"><a href=\"#基础开发环境\" class=\"headerlink\" title=\"基础开发环境\"></a>基础开发环境</h2><h3 id=\"GCC-系列\"><a href=\"#GCC-系列\" class=\"headerlink\" title=\"GCC 系列\"></a>GCC 系列</h3><pre><code>sudo yum install gcc                     # C 编译器\nsudo yum install gcc-c++                 # C++ 编译器\nsudo yum install gcc-gfortran            # Fortran 编译器\nsudo yum install compat-gcc-44           # 兼容 gcc 4.4\nsudo yum install compat-gcc-44-c++       # 兼容 gcc-c++ 4.4\nsudo yum install compat-gcc-44-gfortran  # 兼容 gcc-fortran 4.4\nsudo yum install compat-libf2c-34        # g77 3.4.x 兼容库\n</code></pre><h3 id=\"软件开发辅助工具\"><a href=\"#软件开发辅助工具\" class=\"headerlink\" title=\"软件开发辅助工具\"></a>软件开发辅助工具</h3><pre><code>sudo yum install make\nsudo yum install gdb     # 代码调试器\nsudo yum install cmake   # Cmake\nsudo yum install git     # 版本控制\n</code></pre><h2 id=\"驱动程序\"><a href=\"#驱动程序\" class=\"headerlink\" title=\"驱动程序\"></a>驱动程序</h2><h3 id=\"显卡驱动\"><a href=\"#显卡驱动\" class=\"headerlink\" title=\"显卡驱动\"></a>显卡驱动</h3><p>Linux 默认只使用开源的显卡驱动，就目前的情况来看，开源驱动的效果还是不错的，但跟官方的<br>闭源驱动相比还是有一定差距。最明显的区别是，在使用 SAC 的 ppk 功能放大波形时，使用开源驱动会<br>出现延迟，而使用官方闭源则整个过程非常顺畅。</p>\n<p>关于显卡驱动的安装，请参考 <a href=\"/install-nvidia-drivers-under-linux.html\">Linux 下安装 nvidia 显卡驱动</a><br>一文中的 “从 ELRepo 源中安装驱动” 部分。</p>\n<p><strong>注意</strong>：目前的显卡驱动似乎有问题，安装后终端有时会出现屏幕闪烁、一屏文字上下重复跳动的情况，<br>稍微有些影响用 vim 写代码。是否要安装显卡驱动自己决定。</p>\n<h3 id=\"NTFS-驱动\"><a href=\"#NTFS-驱动\" class=\"headerlink\" title=\"NTFS 驱动\"></a>NTFS 驱动</h3><p>CentOS 下默认无法挂载 NTFS 格式的硬盘。需安装 nfts-3g 即可实现即插即用:</p>\n<pre><code>sudo yum install ntfs-3g\n</code></pre><h2 id=\"进阶开发环境\"><a href=\"#进阶开发环境\" class=\"headerlink\" title=\"进阶开发环境\"></a>进阶开发环境</h2><h3 id=\"Java-环境\"><a href=\"#Java-环境\" class=\"headerlink\" title=\"Java 环境\"></a>Java 环境</h3><p>Java 的一大特色在于跨平台，安装了 Java 运行环境，即可运行 Java 程序:</p>\n<pre><code>sudo yum install java                        # java 运行环境\n</code></pre><h3 id=\"Clang-系列\"><a href=\"#Clang-系列\" class=\"headerlink\" title=\"Clang 系列\"></a>Clang 系列</h3><p>Clang 可以认为是 GCC 的替代品，可以用于编译 C、C++、Objective-C 和 Objective-C++。其提供了更友好的<br>报错信息，在有些方面比 GCC 更友好，同时其提供了一个代码静态分析器，可以用于分析代码中可能出现的 bug 和内存溢出问题。</p>\n<pre><code>sudo yum install clang             # clang 编译器\nsudo yum install clang-analyzer    # clang 静态分析器\n</code></pre><h3 id=\"Intel-系列\"><a href=\"#Intel-系列\" class=\"headerlink\" title=\"Intel 系列\"></a>Intel 系列</h3><p>Intel 的大部分软件都是非开源且收费的，但同时部分软件也提供了 Linux 下的非商业免费版。<br>比如 icc、mkl 数学库以及代码性能分析工具等。</p>\n<p>Intel 软件的申请以及安装参考《<a href=\"/intel-non-commercial-software.html\">Intel 非商业免费开发工具</a>》。</p>\n<p>还有一点需要注意的是，Intel 也提供了并行相关的几个命令，比如 mpicc、mpirun。所以 openmpi、mpich<br>和 intel 三者，在并行时只能用其中一个。</p>\n<h3 id=\"并行计算\"><a href=\"#并行计算\" class=\"headerlink\" title=\"并行计算\"></a>并行计算</h3><p>并行可以用 openmpi，也可以用 mpich，二者的功能可以认为是完全相同的。由于二者提供了几乎一样的命令，<br>所以二者可以同时安装，但是不可以同时处于使用状态。</p>\n<h4 id=\"openmpi\"><a href=\"#openmpi\" class=\"headerlink\" title=\"openmpi\"></a>openmpi</h4><p>安装 openmpi:</p>\n<pre><code>sudo yum install openmpi openmpi-devel\n</code></pre><p>安装后，二进制文件位于 <code>/usr/lib64/openmpi/bin</code> 下，动态库文件位于 <code>/usr/lib64/openmpi/lib</code><br>下，因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>\n<pre><code>export PATH=/usr/lib64/openmpi/bin/:${PATH}\nmodule load mpi/openmpi-x86_64\n</code></pre><p>PS：要使用 <code>module</code> 命令需要先安装 <code>environment-modules</code> 包。</p>\n<h4 id=\"mpich\"><a href=\"#mpich\" class=\"headerlink\" title=\"mpich\"></a>mpich</h4><p>安装 mpich:</p>\n<pre><code>sudo yum install mpich mpich-devel\n</code></pre><p>安装后，二进制文件位于 <code>/usr/lib64/mpich/bin</code> 下，动态库文件位于 <code>/usr/lib64/mpich/lib</code> 下，<br>因而实际使用的话还需要额外的配置，在 <code>.bashrc</code> 中加入如下语句:</p>\n<pre><code>export PATH=/usr/lib64/mpich/bin/:${PATH}\nmodule load mpi/mpich-x86_64\n</code></pre><h2 id=\"脚本语言环境\"><a href=\"#脚本语言环境\" class=\"headerlink\" title=\"脚本语言环境\"></a>脚本语言环境</h2><h3 id=\"Perl\"><a href=\"#Perl\" class=\"headerlink\" title=\"Perl\"></a>Perl</h3><p>CentOS 7.0 自带了 Perl 5.16.3（2013 年 03 月 11 日发布），目前的最新版本为 5.20.1（2014 年 09 月 14 日发布）。</p>\n<h4 id=\"系统自带-Perl\"><a href=\"#系统自带-Perl\" class=\"headerlink\" title=\"系统自带 Perl\"></a>系统自带 Perl</h4><p>系统自带 Perl，就目前来看，版本不算老，基本够用。官方源和 EPEL 源中提供了 1000 多个模块，可以直接用 yum 安装:</p>\n<pre><code>sudo yum install perl-Parallel-ForkManager  # 并行模块\n</code></pre><p>若源中没有已打包好的模块，也可以使用 perl 自带的 cpan 来安装模块。</p>\n<p>优先级：yum &gt; cpan。</p>\n<h4 id=\"plenv-管理新版本\"><a href=\"#plenv-管理新版本\" class=\"headerlink\" title=\"plenv 管理新版本\"></a>plenv 管理新版本</h4><p>若需要使用最新版本的 perl，可以使用 <a href=\"/perl-plenv.html\">plenv</a> 安装新版本的 perl，并使用 plenv 提供的 cpanm 命令安装模块:</p>\n<pre><code>cpanm install Parallel::ForkManager # 并行模块\n</code></pre><h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><p>CentOS 7.0 自带 Python 2.7.5，目前 Python 2 的最新版本为 2.7.8，Python 3 的最新版本为 3.4.2。</p>\n<h4 id=\"系统自带-Python\"><a href=\"#系统自带-Python\" class=\"headerlink\" title=\"系统自带 Python\"></a>系统自带 Python</h4><p>系统自带的 Python 2.7.5，基本已经够用，Python 2 常用的模块在官方源或 EPEL 源中也有有编译好的包，<br>因而直接通过 yum 安装即可:</p>\n<pre><code>sudo yum install python-matplotlib  # 2D 绘图库\nsudo yum install PyQt4  # Qt4 的 Python 绑定\nsudo yum install numpy  # 数组操作库\nsudo yum install scipy  # 科学计算库\nsudo yum install python-requests  # 网页请求\nsudo yum install python-docopt  # 命令行参数分析器\nsudo yum install gdal-python    # gdal 的 Python 绑定\n</code></pre><h4 id=\"pyenv-管理-Python3\"><a href=\"#pyenv-管理-Python3\" class=\"headerlink\" title=\"pyenv 管理 Python3\"></a>pyenv 管理 Python3</h4><p>Python2 与 Python3 之间是不完全兼容的，而我以 Python3 为主，所以需要安装一个 Python3。</p>\n<p>首先，安装 <a href=\"/python-pyenv.html\">pyenv</a> 来管理多个 Python 版本，然后利用 pyenv 安装 anaconda3<br>（即 Python3.4）。anaconda 自带了众多科学计算所需的包，免去了安装的麻烦，对于其他包，<br>则可以利用 Python 自带的 pip 安装:</p>\n<pre><code>pip install requests\npip install docopt\n</code></pre><h2 id=\"编程相关软件\"><a href=\"#编程相关软件\" class=\"headerlink\" title=\"编程相关软件\"></a>编程相关软件</h2><h3 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h3><p>写代码的时候选一个好用的编辑器很重要，用的比较多的编辑器如下：</p>\n<ol>\n<li>vim</li>\n<li>emacs</li>\n<li>atom</li>\n<li>sublime text 3</li>\n<li>Visual Studio Code</li>\n</ol>\n<h3 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h3><ul>\n<li>Python IDE：<a href=\"https://www.jetbrains.com/pycharm/\">PyCharm Community Edition</a></li>\n</ul>\n<h2 id=\"日常软件\"><a href=\"#日常软件\" class=\"headerlink\" title=\"日常软件\"></a>日常软件</h2><h3 id=\"Office-套件\"><a href=\"#Office-套件\" class=\"headerlink\" title=\"Office 套件\"></a>Office 套件</h3><h4 id=\"LibreOffice\"><a href=\"#LibreOffice\" class=\"headerlink\" title=\"LibreOffice\"></a>LibreOffice</h4><p>大多数 Linux 发行版都自带 LibreOffice:</p>\n<pre><code>sudo yum install libreoffice\n</code></pre><p>LibreOffice 与 Microsoft Office 的兼容性不太好，操作界面与 MS Office 也有较大差异，让人不太习惯。</p>\n<h4 id=\"WPS-Office\"><a href=\"#WPS-Office\" class=\"headerlink\" title=\"WPS Office\"></a>WPS Office</h4><p>若在 Linux 下对于文档处理有更高一些的要求，可以尝试目前还处于测试版的 WPS Office for Linux。<br>WPS Office 的兼容性以及界面都比 LibreOffice 要好很多，值得期待，当然还是不能做到完全兼容 MS<br>Office。</p>\n<p>安装过程参考 <a href=\"/wps-office-for-centos7.html\">CentOS 下安装 WPS Office</a> 一文。</p>\n<h3 id=\"PS-PDF-阅读器\"><a href=\"#PS-PDF-阅读器\" class=\"headerlink\" title=\"PS/PDF 阅读器\"></a>PS/PDF 阅读器</h3><p>系统自带的 evince 阅读器，可以打开 PS 和 PDF 文件，基本足够日常的使用了。</p>\n<h4 id=\"zathura\"><a href=\"#zathura\" class=\"headerlink\" title=\"zathura\"></a>zathura</h4><p>zathura 可以查看 PS、PDF、djvu 格式的文件，可以作为 evince 的替代品:</p>\n<pre><code>sudo yum install zathura zathura-plugins-all\n</code></pre><h4 id=\"ghostscript\"><a href=\"#ghostscript\" class=\"headerlink\" title=\"ghostscript\"></a>ghostscript</h4><pre><code>sudo yum install ghostscript\n</code></pre><h4 id=\"master-pdf-editor\"><a href=\"#master-pdf-editor\" class=\"headerlink\" title=\"master-pdf-editor\"></a>master-pdf-editor</h4><p>官方网站: <a href=\"https://code-industry.net/free-pdf-editor/\">https://code-industry.net/free-pdf-editor/</a></p>\n<pre><code>sudo yum localinstall http://get.code-industry.net/public/master-pdf-editor3-3.2.62-1.x86_64.rpm\n</code></pre><h3 id=\"TeX-Live-2015\"><a href=\"#TeX-Live-2015\" class=\"headerlink\" title=\"TeX Live 2015\"></a>TeX Live 2015</h3><p>系统是自带了 TeXLive，版本较老，还是安装最新版比较好。</p>\n<p>参考 <a href=\"/install-texlive-under-linux.html\">Linux 下安装 TeXLive</a> 一文。</p>\n<h3 id=\"Mendeley\"><a href=\"#Mendeley\" class=\"headerlink\" title=\"Mendeley\"></a>Mendeley</h3><p>Mendeley 是一个跨平台的文献管理软件，其内部自带了一个可以添加注释的 PDF 阅读器。</p>\n<p>下载 Generic Linux (64 bits)：<a href=\"http://www.mendeley.com/download-mendeley-desktop\">http://www.mendeley.com/download-mendeley-desktop</a></p>\n<p>安装:</p>\n<pre><code>tar -xvf mendeleydesktop-1.12.3-linux-x86_64.tar.bz2  # 解压\nsudo mv mendeleydesktop /opt  # 复制到 / opt 下\ncd /opt/mendeleydesktop/bin   # cd 进去\n./install-mendeley-link-handler.sh /opt/mendeleydesktop/bin/mendeleydesktop\nsudo yum install qtwebkit  # 安装依赖包\n</code></pre><p>注销重新登陆，在 Application-&gt;Education 下即可看到 mendeley 的相关项目。不过是<br>没有软件的图标的，强迫症不能忍，用下面的命令解决:</p>\n<pre><code>cp /opt/mendeleydesktop/share/icons/hicolor/128x128/apps/mendeleydesktop.png ~/.local/share/icons/\n</code></pre><h3 id=\"Google-Chrome-浏览器\"><a href=\"#Google-Chrome-浏览器\" class=\"headerlink\" title=\"Google Chrome 浏览器\"></a>Google Chrome 浏览器</h3><p>默认的浏览器是 Firefox，还是更喜欢 Chrome 浏览器。</p>\n<p>Google 官方源在国内可能无法正常访问，故而添加 Fedora 中文社区提供的镜像源:</p>\n<pre><code>sudo wget http://repo.fdzh.org/chrome/google-chrome-mirrors.repo -P /etc/yum.repos.d/\n</code></pre><p>安装:</p>\n<pre><code>sudo yum install google-chrome-stable\n</code></pre><h3 id=\"Opera-浏览器\"><a href=\"#Opera-浏览器\" class=\"headerlink\" title=\"Opera 浏览器\"></a>Opera 浏览器</h3><p>也可以选择 Opera 浏览器。</p>\n<p>下载地址：<a href=\"http://www.opera.com/download/guide/?os=linux\">http://www.opera.com/download/guide/?os=linux</a></p>\n<p>选择 CentOS RPM package 进行下载。下载完成后，执行:</p>\n<pre><code>sudo yum localinstall opera-12.16-1860.x86_64.rpm\n</code></pre><p>想要卸载的话，就执行:</p>\n<pre><code>sudo yum remove opera\n</code></pre><h3 id=\"Flash-插件\"><a href=\"#Flash-插件\" class=\"headerlink\" title=\"Flash 插件\"></a>Flash 插件</h3><p>Flash 插件主要是看在线视频的时候要用。Google 浏览器自带了 Flash 插件，所以这里安装的 flash 插件主要是为了 firefox。</p>\n<pre><code>sudo rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm\nsudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\nsudo yum install flash-plugin\n</code></pre><h3 id=\"解压软件\"><a href=\"#解压软件\" class=\"headerlink\" title=\"解压软件\"></a>解压软件</h3><p>解压 7z 或 zip 格式需要 p7zip，由 EPEL 提供:</p>\n<pre><code>sudo yum install p7zip\n</code></pre><p>解压 rar 格式可以使用 <a href=\"https://unarchiver.c3.cx/commandline\">unar</a>，该软件位于 EPEL 源中：</p>\n<pre><code>sudo yum install unar\n</code></pre><h3 id=\"FTP-客户端\"><a href=\"#FTP-客户端\" class=\"headerlink\" title=\"FTP 客户端\"></a>FTP 客户端</h3><p>FTP 客户端，还是有界面的 filezilla 比较方便些。</p>\n<pre><code>sudo yum install filezilla\n</code></pre><h3 id=\"Google-Earth\"><a href=\"#Google-Earth\" class=\"headerlink\" title=\"Google Earth\"></a>Google Earth</h3><p>到 <a href=\"https://www.google.com/earth/download/ge/agree.html\">https://www.google.com/earth/download/ge/agree.html</a> 下载64位rpm包，执行如下命令安装:</p>\n<pre><code>sudo yum localinstall google-earth-stable_current_x86_64.rpm\n</code></pre><h2 id=\"效率类软件\"><a href=\"#效率类软件\" class=\"headerlink\" title=\"效率类软件\"></a>效率类软件</h2><p>这一类工具能够在不同方面提高科研的效率，也提高了使用者的体验。</p>\n<h3 id=\"终端模拟器\"><a href=\"#终端模拟器\" class=\"headerlink\" title=\"终端模拟器\"></a>终端模拟器</h3><p>Gnome 自带的终端模拟器是 gnome-terminal。经常会需要开十几个终端，切换和管理起来比较麻烦。</p>\n<h4 id=\"terminator\"><a href=\"#terminator\" class=\"headerlink\" title=\"terminator\"></a>terminator</h4><p>terminator 有很多功能，我只用到了终端分割的功能。 <code>Ctrl+Shift+O</code> 对终端水平分隔，<br><code>Ctrl+Shift+E</code> 对终端垂直分隔， <code>Alt + 上下左右</code> 可以在各子终端中切换。terminator 由 Nux Dextop 提供:</p>\n<pre><code>sudo yum install terminator\n</code></pre><h4 id=\"guake\"><a href=\"#guake\" class=\"headerlink\" title=\"guake\"></a>guake</h4><p>有些时候需要临时执行一两个命令，但是又不想额外启动一个终端的情况下，guake 是个不错的选择。</p>\n<pre><code>sudo yum install guake\n</code></pre><p>安装完成后，在 Application-&gt;System Tools 里找到 guake Terminal 即可启动。按下 F12<br>即可呼出 guake，再次按下 F12 即可隐藏。也可在终端执行 <code>guake-prefs</code> 对 gauke 进行配置。</p>\n<h3 id=\"zsh-与-oh-my-zsh\"><a href=\"#zsh-与-oh-my-zsh\" class=\"headerlink\" title=\"zsh 与 oh my zsh\"></a>zsh 与 oh my zsh</h3><p>Linux 下有很多 shell，比如最常见的 bash，除此之外还有 csh、ksh。zsh 也是一个 shell。</p>\n<p>zsh 的特点在于：</p>\n<ul>\n<li>语法基本完全兼容于 bash，一般用户完全体会不到其区别</li>\n<li>zsh 提供命令补全特性，比 bash 的补全要更好用</li>\n<li>可配置性强</li>\n</ul>\n<p>完全不经配置的 zsh 已经很好用了，一般用户也没必要花时间研究配置。<br><a href=\"https://github.com/robbyrussell/oh-my-zsh\">oh my zsh</a> 是一群人一起维护的一套 zsh 配置文件。<br>直接用这个配置文件，稍稍了解一点会有更好的体验。</p>\n<p>安装 zsh:</p>\n<pre><code>sudo yum install zsh\n</code></pre><p>安装 oh my zsh:</p>\n<pre><code>curl -L http://install.ohmyz.sh | sh\n</code></pre><p>上面的命令，做了如下几件事情：</p>\n<ul>\n<li>下载 <code>oh my zsh</code> 到 <code>~/.oh-my-zsh</code></li>\n<li>备份已有的 zsh 配置文件 <code>~/.zshrc</code> ，并复制新的 <code>.zshrc</code> 文件</li>\n<li>将当前用户的默认 shell 由 bash 改成 zsh</li>\n</ul>\n<p>第三步中，会报错如下： <code>chsh: &quot;/usr/bin/zsh&quot; is not listed in /etc/shells.</code> ，需要手动修改默认 shell:</p>\n<pre><code>chsh -s /bin/zsh\n</code></pre><p>chsh 命令修改的是 login shell，因而需要退出当前用户并重新登陆，以后用户的默认 shell<br>就从 bash 变成了 zsh，所有的配置都不用写到 <code>.bashrc</code> 而要写到 <code>.zshrc</code> 中。</p>\n<p>在 <code>.zshrc</code> 中可以选择喜欢的主题，以及适当数量的插件。下面列出我在用的插件:</p>\n<ol>\n<li><p>git</p>\n<p>该插件为 git 的众多常用命令提供了更简单的别名，比如 <code>git status</code> 的别名是 <code>gst</code>，<br>大大减少了击键数。但该插件中 <code>git mergetool --no-prompt</code> 的别名是 <code>gmt</code>，<br>与 GMT 软件冲突，需要将该插件的目录 git 复制到 custom/plugins 下，然后删除其中的 gmt 别名；</p>\n</li>\n<li><p>命令补全插件: pip, pyenv</p>\n</li>\n<li>sudo：按两下 <code>ESC</code> 即可在当前命令前加上 <code>sudo</code></li>\n<li>yum：为常见的 yum 命令提供别名</li>\n</ol>\n<h3 id=\"autojump\"><a href=\"#autojump\" class=\"headerlink\" title=\"autojump\"></a>autojump</h3><p><a href=\"https://github.com/joelthelion/autojump\">autojump</a> 是一个非常智能的目录快速切换的工具。简单演示如下:</p>\n<pre><code>$ pwd\n/home/seisman\n$ cd Desktop\n$ cd /opt\n$ cd /usr/local\n\n# 用 j 命令迅速从 / usr/local 跳转到与 des 匹配的目录，这里只有 Desktop 可以匹配\n$ j des\n$ pwd\n/home/seisman/Desktop\n</code></pre><p>用法差不多就这样，具体看项目主页。</p>\n<p>安装:</p>\n<pre><code>sudo yum install autojump\nsudo yum install autojump-zsh\n</code></pre><h3 id=\"中文输入法\"><a href=\"#中文输入法\" class=\"headerlink\" title=\"中文输入法\"></a>中文输入法</h3><p>由于使用的是全英文安装，所以默认是没有中文输入法的。</p>\n<p>在“Application”-&gt;“Settings”-&gt;“Region &amp; Language” 中将“Chinese（Intelligent Pinyin）”添加到“Input Sources” 中即可使用中文输入法。默认使用“Shift”键切换中文输入法。</p>\n<h3 id=\"等宽字体\"><a href=\"#等宽字体\" class=\"headerlink\" title=\"等宽字体\"></a>等宽字体</h3><p>编程要用等宽字体，这点是常识了。一款适合编程的等宽字体，至少要满足如下几个要求：</p>\n<ol>\n<li>易于区分 “1”、“i” 和“l”</li>\n<li>易于区分 “0”、“o” 和“O”</li>\n<li>易于区分中文下的左引号和右引号</li>\n<li>美观</li>\n</ol>\n<p>目前选择的 Source Code Pro。将解压后的字体文件放在 <code>~/.fonts</code> 目录下，并修改终端、gedit 以及其他编辑器、IDE 等的默认字体。</p>\n<h2 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a>虚拟机</h2><p>有时候可能需要在 Windows 下做一些操作，如果机器性能足够好的话，可以安装虚拟机。</p>\n<h3 id=\"VirtualBox-虚拟机\"><a href=\"#VirtualBox-虚拟机\" class=\"headerlink\" title=\"VirtualBox 虚拟机\"></a>VirtualBox 虚拟机</h3><p>VirtuabBox 的安装:</p>\n<pre><code>wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\nsudo mv virtualbox.repo /etc/yum.repos.d/\nsudo yum install VirtualBox-5.0\n</code></pre><p>需要注意两点：</p>\n<ul>\n<li>若机器性能不够，虚拟机的使用体验会非常差，所以不建议在老机器上使用；</li>\n<li>更新 kernel 之后需要执行 <code>sudo /sbin/rcvboxdrv setup</code> ；</li>\n<li>在 VirtualBox 安装虚拟系统后，记得使用 “设备”-&gt;“安装增强功能”，使用效果会更好；</li>\n</ul>\n<h3 id=\"gnome-boxes\"><a href=\"#gnome-boxes\" class=\"headerlink\" title=\"gnome-boxes\"></a>gnome-boxes</h3><p>gnome-boxes 是 GNOME3 开发的一个虚拟机工具，使用体验不如 VirtualBox:</p>\n<pre><code>sudo yum install gnome-boxes\n</code></pre><h3 id=\"Wine\"><a href=\"#Wine\" class=\"headerlink\" title=\"Wine\"></a>Wine</h3><p>Wine 是一个可以让 Windows 程序运行在 Linux 下的软件。类似虚拟机，但跟虚拟机又不太一样:</p>\n<pre><code>sudo yum install wine\n</code></pre><h2 id=\"同步网盘\"><a href=\"#同步网盘\" class=\"headerlink\" title=\"同步网盘\"></a>同步网盘</h2><p>网盘根据功能大概可以分为两类：同步网盘和备份网盘。既然是同步网盘，Linux 下<br>的客户端必不可少。就目前已知的情况来看，CentOS7 下能使用的同步网盘只有三个：<br>Dropbox、MEGA 和坚果云。</p>\n<p>我主要用同步网盘将 Linux 机器上的 PDF 文献同步到 iPad 上。</p>\n<h3 id=\"Dropbox\"><a href=\"#Dropbox\" class=\"headerlink\" title=\"Dropbox\"></a>Dropbox</h3><p>又是一个被墙的工具，熟练掌握科学上网技巧的人可以使用，一般人还是不要用了。</p>\n<pre><code>wget https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\nsudo rpm -i nautilus-dropbox-1.6.2-1.fedora.x86_64.rpm\n</code></pre><h3 id=\"MEGA\"><a href=\"#MEGA\" class=\"headerlink\" title=\"MEGA\"></a>MEGA</h3><p>MEGA： <a href=\"https://mega.co.nz/\">https://mega.co.nz/</a></p>\n<p>免费容量 50G，作为同步盘来说基本是够用了。</p>\n<pre><code># 下载主程序\nwget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/megasync-CentOS_7.x86_64.rpm\n# 下载文件管理器扩展（可选）\nwget https://mega.nz/linux/MEGAsync/CentOS_7/x86_64/nautilus-megasync-CentOS_7.x86_64.rpm\nsudo yum localinstall megasync-CentOS_7.x86_64.rpm\nsudo yum localinstall nautilus-megasync-CentOS_7.x86_64.rpm\n</code></pre><h3 id=\"坚果云\"><a href=\"#坚果云\" class=\"headerlink\" title=\"坚果云\"></a>坚果云</h3><p>国内的全平台同步网盘，不限空间，但限制每月上传流量 1G，下载流量 3G。</p>\n<pre><code># 坚果云依赖于 notify-python\nsudo yum install notify-python\n# 下载\nwget https://jianguoyun.com/static/exe/installer/fedora/nautilus_nutstore_amd64.rpm\nsudo rpm -i nautilus_nutstore_amd64.rpm\n</code></pre><h2 id=\"工具软件\"><a href=\"#工具软件\" class=\"headerlink\" title=\"工具软件\"></a>工具软件</h2><h3 id=\"视频下载工具\"><a href=\"#视频下载工具\" class=\"headerlink\" title=\"视频下载工具\"></a>视频下载工具</h3><p><a href=\"https://github.com/soimort/you-get\">you-get</a> 和 <a href=\"https://github.com/rg3/youtube-dl\">youtube-dl</a><br>是两个用于从视频网站上下载视频文件的工具。其中，后者支持的网站更多，但前者对国内的视频网站支持更好。</p>\n<pre><code>pip install you-get\npip install youtube-dl\n# EPEL 中提供了 youtube-dl 包，因而也可以使用 yum 安装。一般来说，pip 安装的版本更新一些\n</code></pre><h3 id=\"PDF-处理工具\"><a href=\"#PDF-处理工具\" class=\"headerlink\" title=\"PDF 处理工具\"></a>PDF 处理工具</h3><p><a href=\"http://community.coherentpdf.com/\">cpdf</a> 是一个跨平台的 PDF 处理工具，可以完成常见的 PDF 合并、<br>切割、加密解密、书签、水印等功能。</p>\n<p>下载已编译好的 <a href=\"https://github.com/coherentgraphics/cpdf-binaries/archive/master.zip\">二进制包</a>，<br>解压，并将与自己的平台对应的二进制文件复制到 <code>${HOME}/bin</code> 目录下即可使用。</p>\n<h3 id=\"BT-软件\"><a href=\"#BT-软件\" class=\"headerlink\" title=\"BT 软件\"></a>BT 软件</h3><p>transmission 是 Linux 下常用的 Torrent 下载软件:</p>\n<pre><code>sudo yum install transmission\n</code></pre><p>在 “Application”-&gt;“Internet”-&gt; 中可以启动 transmission。</p>\n<h3 id=\"uGet\"><a href=\"#uGet\" class=\"headerlink\" title=\"uGet\"></a>uGet</h3><p><a href=\"http://ugetdm.com/\">http://ugetdm.com/</a></p>\n<p>uGet 是 Linux 下的一个下载工具，支持 HTTP、HTTPS、FTP、Torrent 等，支持多连接，并可以监视剪贴板:</p>\n<pre><code>sudo yum --enablerepo=epel-testing install uget aria2\n</code></pre><h3 id=\"截图软件-shutter\"><a href=\"#截图软件-shutter\" class=\"headerlink\" title=\"截图软件 shutter\"></a>截图软件 shutter</h3><p>GNOME 自带了截图工具。 <code>PrtScn</code> 为截取整个屏幕； <code>Alt+PrtScn</code> 为截取当前窗口；<br><code>Shift+PrtScn</code> 为自定义截屏区域。</p>\n<p><a href=\"http://shutter-project.org/\">shutter</a> 是一个功能更强大的截图工具，支持不同的截图方式、<br>图片格式，还支持图片的简单编辑与注释:</p>\n<pre><code>sudo yum install shutter\n</code></pre><p>可以通过 <a href=\"http://shutter-project.org/faq-help/set-shutter-as-the-default-screenshot-tool/\">修改快捷键使 shutter 成为默认的截图工具</a>。</p>\n<h3 id=\"其他工具\"><a href=\"#其他工具\" class=\"headerlink\" title=\"其他工具\"></a>其他工具</h3><pre><code>sudo yum install nfs-utils     # 挂载 NFS 文件系统所必须\nsudo yum install xclip         # 终端的文本复制工具\nsudo yum install ImageMagick   # 其中的 import 和 convert 命令很有用\nsudo yum install dos2unix unix2dos  # Windows 和 Linux 换行符互相转换\nsudo yum install meld          # 图形界面下的文件差异比较工具\n</code></pre><h2 id=\"娱乐\"><a href=\"#娱乐\" class=\"headerlink\" title=\"娱乐\"></a>娱乐</h2><h3 id=\"影音播放器\"><a href=\"#影音播放器\" class=\"headerlink\" title=\"影音播放器\"></a>影音播放器</h3><p>Nux Dextop 提供了 mplayer 和 VLC，可以用于播放常见格式的音频和视频，二者选其一安装即可:</p>\n<pre><code>sudo yum install mplayer\nsudo yum install vlc\n</code></pre><h3 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h3><pre><code>sudo yum install 2048-cli   # 2048 命令行版\n</code></pre><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"http://elrepo.org/tiki/tiki-index.php\">ELRepo 官方网站</a></li>\n<li><a href=\"http://elrepo.org/tiki/kmod-nvidia\">ELRepo kmod-nvidia</a></li>\n<li><a href=\"http://wiki.centos.org/zh/AdditionalResources/Repositories/GoogleYumRepos\">CentOS Yum 软件库样例</a></li>\n</ol>\n<h2 id=\"修订历史\"><a href=\"#修订历史\" class=\"headerlink\" title=\"修订历史\"></a>修订历史</h2><ul>\n<li>2017-04-15：初稿；</li>\n</ul>"},{"title":"Hello Hexo","date":"2017-03-31T16:00:00.000Z","_content":"想建一个自己的博客很久了，然而事务杂忙（其实只是在看火影和王座）。拖到现在才来完成今年的小目标。搭建的过程中在网上看了很多很多博客，在这里就不一一列举了。然后自己汇总了一下，就贴在这里，以替换例行的Hello World。\n## 安装Hexo与配置\n### 前期准备工作\n安装``node.js``的环境，包括``nvm``的安装、``node.js``具体版本的安装（其实我是一枚前端渣^_^哈哈哈）\nPS:Mac下通过``homebrew``（可以参看我的[``homebrew``安装教程](#)）神器安装``nvm``，再``nvm install node.js``的某版本即可\n```  bash\n$ alias nvminit_sq='. \"$(brew --prefix nvm)/nvm.sh\"'\n```\n### 安装hexo\n``` bash\n$ npm install -g hexo-cli\n```\n### 初始化hexo文件夹\n先``cd``到为``hexo``准备的文件夹，然后执行：\n```  bash\n$ hexo init\n```\n\n## github准备与操作\n在github上创建名为yourname.github.io的repository，这里yourname一定要换成你自己的github的username\n\n### 配置hexo\n修改``hexo``目录下的``_config.yml``文件的末尾：\n```\ndeploy:\n  type: git\n  repository: git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n同理，yourname换成你的github的username\n### 安装git部署工具\n在hexo的目录下执行命令：\n``` bash\n$ npm install hexo-deployer-git --save\n```\n## 写作与发布\n```\n$ hexo new \"My New Post\"\n```\n更多信息: [写作](https://hexo.io/zh-cn/docs/writing.html)\n### 运行服务\n```\n$ hexo server\n```\n更多信息: [服务](https://hexo.io/zh-cn/docs/server.html)\n### 生成静态文件\n```\n$ hexo generate\n```\n更多信息:  [生成](https://hexo.io/zh-cn/docs/generating.html)\n### 部署远程服务器\n``` bash\n$ hexo deploy\n```\n更多信息:  [部署](https://hexo.io/zh-cn/docs/deployment.html)\n至此博客搭建完成，浏览器输入yourname.github.io即可看到个人博客的内容\n## 总结\n去年离开[59store](www.59store.com)的时候我就定下了几个今年必须拿下的几个小目标，终于可以划掉一个啦啦啦^_^！\n参考了很多资料，原来打算用我弱鸡的全栈经验（一个数据后台的开发经验）来部个lamp，后来服务器都准备好了（花了我很多大洋），想多参考别人的bolg再下手干，发现很多技术博客都有自豪的采用WordPress，power by Typecho,hexo强力驱动...云云，Google了下发现了许多托管GitHub的静态博客框架（还有不要买服务器的惊艳到了@……@），比较流行的有Jekyll，Hexo，Simple，Octopress，Pelican以及Lo·gecho等等。最终选定了Hexo来搭建自己的博客，主要原因是Hexo的教程多吧^-^\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello Hexo\ndate: 2017-04-01\n---\n想建一个自己的博客很久了，然而事务杂忙（其实只是在看火影和王座）。拖到现在才来完成今年的小目标。搭建的过程中在网上看了很多很多博客，在这里就不一一列举了。然后自己汇总了一下，就贴在这里，以替换例行的Hello World。\n## 安装Hexo与配置\n### 前期准备工作\n安装``node.js``的环境，包括``nvm``的安装、``node.js``具体版本的安装（其实我是一枚前端渣^_^哈哈哈）\nPS:Mac下通过``homebrew``（可以参看我的[``homebrew``安装教程](#)）神器安装``nvm``，再``nvm install node.js``的某版本即可\n```  bash\n$ alias nvminit_sq='. \"$(brew --prefix nvm)/nvm.sh\"'\n```\n### 安装hexo\n``` bash\n$ npm install -g hexo-cli\n```\n### 初始化hexo文件夹\n先``cd``到为``hexo``准备的文件夹，然后执行：\n```  bash\n$ hexo init\n```\n\n## github准备与操作\n在github上创建名为yourname.github.io的repository，这里yourname一定要换成你自己的github的username\n\n### 配置hexo\n修改``hexo``目录下的``_config.yml``文件的末尾：\n```\ndeploy:\n  type: git\n  repository: git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n同理，yourname换成你的github的username\n### 安装git部署工具\n在hexo的目录下执行命令：\n``` bash\n$ npm install hexo-deployer-git --save\n```\n## 写作与发布\n```\n$ hexo new \"My New Post\"\n```\n更多信息: [写作](https://hexo.io/zh-cn/docs/writing.html)\n### 运行服务\n```\n$ hexo server\n```\n更多信息: [服务](https://hexo.io/zh-cn/docs/server.html)\n### 生成静态文件\n```\n$ hexo generate\n```\n更多信息:  [生成](https://hexo.io/zh-cn/docs/generating.html)\n### 部署远程服务器\n``` bash\n$ hexo deploy\n```\n更多信息:  [部署](https://hexo.io/zh-cn/docs/deployment.html)\n至此博客搭建完成，浏览器输入yourname.github.io即可看到个人博客的内容\n## 总结\n去年离开[59store](www.59store.com)的时候我就定下了几个今年必须拿下的几个小目标，终于可以划掉一个啦啦啦^_^！\n参考了很多资料，原来打算用我弱鸡的全栈经验（一个数据后台的开发经验）来部个lamp，后来服务器都准备好了（花了我很多大洋），想多参考别人的bolg再下手干，发现很多技术博客都有自豪的采用WordPress，power by Typecho,hexo强力驱动...云云，Google了下发现了许多托管GitHub的静态博客框架（还有不要买服务器的惊艳到了@……@），比较流行的有Jekyll，Hexo，Simple，Octopress，Pelican以及Lo·gecho等等。最终选定了Hexo来搭建自己的博客，主要原因是Hexo的教程多吧^-^\n","slug":"hello-world","published":1,"updated":"2017-04-28T09:51:38.000Z","_id":"cj21lz1jc0003pgc9w4985bv1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>想建一个自己的博客很久了，然而事务杂忙（其实只是在看火影和王座）。拖到现在才来完成今年的小目标。搭建的过程中在网上看了很多很多博客，在这里就不一一列举了。然后自己汇总了一下，就贴在这里，以替换例行的Hello World。</p>\n<h2 id=\"安装Hexo与配置\"><a href=\"#安装Hexo与配置\" class=\"headerlink\" title=\"安装Hexo与配置\"></a>安装Hexo与配置</h2><h3 id=\"前期准备工作\"><a href=\"#前期准备工作\" class=\"headerlink\" title=\"前期准备工作\"></a>前期准备工作</h3><p>安装<code>node.js</code>的环境，包括<code>nvm</code>的安装、<code>node.js</code>具体版本的安装（其实我是一枚前端渣^_^哈哈哈）<br>PS:Mac下通过<code>homebrew</code>（可以参看我的<a href=\"#\"><code>homebrew</code>安装教程</a>）神器安装<code>nvm</code>，再<code>nvm install node.js</code>的某版本即可<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">alias</span> nvminit_sq=<span class=\"string\">'. \"$(brew --prefix nvm)/nvm.sh\"'</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h3 id=\"初始化hexo文件夹\"><a href=\"#初始化hexo文件夹\" class=\"headerlink\" title=\"初始化hexo文件夹\"></a>初始化hexo文件夹</h3><p>先<code>cd</code>到为<code>hexo</code>准备的文件夹，然后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure></p>\n<h2 id=\"github准备与操作\"><a href=\"#github准备与操作\" class=\"headerlink\" title=\"github准备与操作\"></a>github准备与操作</h2><p>在github上创建名为yourname.github.io的repository，这里yourname一定要换成你自己的github的username</p>\n<h3 id=\"配置hexo\"><a href=\"#配置hexo\" class=\"headerlink\" title=\"配置hexo\"></a>配置hexo</h3><p>修改<code>hexo</code>目录下的<code>_config.yml</code>文件的末尾：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@github.com:yourname/yourname.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>同理，yourname换成你的github的username</p>\n<h3 id=\"安装git部署工具\"><a href=\"#安装git部署工具\" class=\"headerlink\" title=\"安装git部署工具\"></a>安装git部署工具</h3><p>在hexo的目录下执行命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"写作与发布\"><a href=\"#写作与发布\" class=\"headerlink\" title=\"写作与发布\"></a>写作与发布</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new &quot;My New Post&quot;</div></pre></td></tr></table></figure>\n<p>更多信息: <a href=\"https://hexo.io/zh-cn/docs/writing.html\" target=\"_blank\" rel=\"external\">写作</a></p>\n<h3 id=\"运行服务\"><a href=\"#运行服务\" class=\"headerlink\" title=\"运行服务\"></a>运行服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>更多信息: <a href=\"https://hexo.io/zh-cn/docs/server.html\" target=\"_blank\" rel=\"external\">服务</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>更多信息:  <a href=\"https://hexo.io/zh-cn/docs/generating.html\" target=\"_blank\" rel=\"external\">生成</a></p>\n<h3 id=\"部署远程服务器\"><a href=\"#部署远程服务器\" class=\"headerlink\" title=\"部署远程服务器\"></a>部署远程服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>更多信息:  <a href=\"https://hexo.io/zh-cn/docs/deployment.html\" target=\"_blank\" rel=\"external\">部署</a><br>至此博客搭建完成，浏览器输入yourname.github.io即可看到个人博客的内容</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>去年离开<a href=\"www.59store.com\">59store</a>的时候我就定下了几个今年必须拿下的几个小目标，终于可以划掉一个啦啦啦^_^！<br>参考了很多资料，原来打算用我弱鸡的全栈经验（一个数据后台的开发经验）来部个lamp，后来服务器都准备好了（花了我很多大洋），想多参考别人的bolg再下手干，发现很多技术博客都有自豪的采用WordPress，power by Typecho,hexo强力驱动…云云，Google了下发现了许多托管GitHub的静态博客框架（还有不要买服务器的惊艳到了@……@），比较流行的有Jekyll，Hexo，Simple，Octopress，Pelican以及Lo·gecho等等。最终选定了Hexo来搭建自己的博客，主要原因是Hexo的教程多吧^-^</p>\n","site":{"data":{}},"excerpt":"","more":"<p>想建一个自己的博客很久了，然而事务杂忙（其实只是在看火影和王座）。拖到现在才来完成今年的小目标。搭建的过程中在网上看了很多很多博客，在这里就不一一列举了。然后自己汇总了一下，就贴在这里，以替换例行的Hello World。</p>\n<h2 id=\"安装Hexo与配置\"><a href=\"#安装Hexo与配置\" class=\"headerlink\" title=\"安装Hexo与配置\"></a>安装Hexo与配置</h2><h3 id=\"前期准备工作\"><a href=\"#前期准备工作\" class=\"headerlink\" title=\"前期准备工作\"></a>前期准备工作</h3><p>安装<code>node.js</code>的环境，包括<code>nvm</code>的安装、<code>node.js</code>具体版本的安装（其实我是一枚前端渣^_^哈哈哈）<br>PS:Mac下通过<code>homebrew</code>（可以参看我的<a href=\"#\"><code>homebrew</code>安装教程</a>）神器安装<code>nvm</code>，再<code>nvm install node.js</code>的某版本即可<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">alias</span> nvminit_sq=<span class=\"string\">'. \"$(brew --prefix nvm)/nvm.sh\"'</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h3 id=\"初始化hexo文件夹\"><a href=\"#初始化hexo文件夹\" class=\"headerlink\" title=\"初始化hexo文件夹\"></a>初始化hexo文件夹</h3><p>先<code>cd</code>到为<code>hexo</code>准备的文件夹，然后执行：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure></p>\n<h2 id=\"github准备与操作\"><a href=\"#github准备与操作\" class=\"headerlink\" title=\"github准备与操作\"></a>github准备与操作</h2><p>在github上创建名为yourname.github.io的repository，这里yourname一定要换成你自己的github的username</p>\n<h3 id=\"配置hexo\"><a href=\"#配置hexo\" class=\"headerlink\" title=\"配置hexo\"></a>配置hexo</h3><p>修改<code>hexo</code>目录下的<code>_config.yml</code>文件的末尾：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@github.com:yourname/yourname.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>同理，yourname换成你的github的username</p>\n<h3 id=\"安装git部署工具\"><a href=\"#安装git部署工具\" class=\"headerlink\" title=\"安装git部署工具\"></a>安装git部署工具</h3><p>在hexo的目录下执行命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<h2 id=\"写作与发布\"><a href=\"#写作与发布\" class=\"headerlink\" title=\"写作与发布\"></a>写作与发布</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new &quot;My New Post&quot;</div></pre></td></tr></table></figure>\n<p>更多信息: <a href=\"https://hexo.io/zh-cn/docs/writing.html\">写作</a></p>\n<h3 id=\"运行服务\"><a href=\"#运行服务\" class=\"headerlink\" title=\"运行服务\"></a>运行服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>更多信息: <a href=\"https://hexo.io/zh-cn/docs/server.html\">服务</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>更多信息:  <a href=\"https://hexo.io/zh-cn/docs/generating.html\">生成</a></p>\n<h3 id=\"部署远程服务器\"><a href=\"#部署远程服务器\" class=\"headerlink\" title=\"部署远程服务器\"></a>部署远程服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>更多信息:  <a href=\"https://hexo.io/zh-cn/docs/deployment.html\">部署</a><br>至此博客搭建完成，浏览器输入yourname.github.io即可看到个人博客的内容</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>去年离开<a href=\"www.59store.com\">59store</a>的时候我就定下了几个今年必须拿下的几个小目标，终于可以划掉一个啦啦啦^_^！<br>参考了很多资料，原来打算用我弱鸡的全栈经验（一个数据后台的开发经验）来部个lamp，后来服务器都准备好了（花了我很多大洋），想多参考别人的bolg再下手干，发现很多技术博客都有自豪的采用WordPress，power by Typecho,hexo强力驱动…云云，Google了下发现了许多托管GitHub的静态博客框架（还有不要买服务器的惊艳到了@……@），比较流行的有Jekyll，Hexo，Simple，Octopress，Pelican以及Lo·gecho等等。最终选定了Hexo来搭建自己的博客，主要原因是Hexo的教程多吧^-^</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj21lz1j80002pgc9f4aaqac0","category_id":"cj21lz1je0004pgc9wiiij5zf","_id":"cj21lz1jl0007pgc9gctxgm01"}],"PostTag":[{"post_id":"cj21lz1j80002pgc9f4aaqac0","tag_id":"cj21lz1jj0005pgc9t5fhathm","_id":"cj21lz1jm0009pgc9hicq3pfv"},{"post_id":"cj21lz1j80002pgc9f4aaqac0","tag_id":"cj21lz1jl0006pgc9bwglat2l","_id":"cj21lz1jm000apgc97va8lw3g"},{"post_id":"cj21lz1j80002pgc9f4aaqac0","tag_id":"cj21lz1jl0008pgc9hhddbj8l","_id":"cj21lz1jn000bpgc90ojcurjr"}],"Tag":[{"name":"CentOS","_id":"cj21lz1jj0005pgc9t5fhathm"},{"name":"Perl","_id":"cj21lz1jl0006pgc9bwglat2l"},{"name":"Python","_id":"cj21lz1jl0008pgc9hhddbj8l"}]}}